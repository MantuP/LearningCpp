/*
 *    rap103.h
 *
 *    "RAP-0103" ASN.1 module C type definitions and prototypes
 *
 *    This .h file was generated by snacc on Thu Dec  1 16:13:44 2005
 *
 *    UBC snacc written compiler by Mike Sample
 *
 *    NOTE: This is a machine generated file--editing not recommended
 */


#ifndef _rap103_h_
#define _rap103_h_




typedef AsnInt ErrorCode; /* [APPLICATION 519] IMPLICIT INTEGER */

#define BEncErrorCodeContent BEncAsnIntContent

#define BDecErrorCodeContent BDecAsnIntContent

#define PrintErrorCode PrintAsnInt

#define FreeErrorCode FreeAsnInt 




typedef AsnInt ItemLevel; /* [APPLICATION 548] IMPLICIT INTEGER */

#define BEncItemLevelContent BEncAsnIntContent

#define BDecItemLevelContent BDecAsnIntContent

#define PrintItemLevel PrintAsnInt

#define FreeItemLevel FreeAsnInt 




typedef AsnInt ItemOccurrence; /* [APPLICATION 547] IMPLICIT INTEGER */

#define BEncItemOccurrenceContent BEncAsnIntContent

#define BDecItemOccurrenceContent BDecAsnIntContent

#define PrintItemOccurrence PrintAsnInt

#define FreeItemOccurrence FreeAsnInt 




typedef AsnInt ItemOffset; /* [APPLICATION 524] IMPLICIT INTEGER */

#define BEncItemOffsetContent BEncAsnIntContent

#define BDecItemOffsetContent BDecAsnIntContent

#define PrintItemOffset PrintAsnInt

#define FreeItemOffset FreeAsnInt 




typedef AsnInt PathItemId; /* [APPLICATION 546] IMPLICIT INTEGER */

#define BEncPathItemIdContent BEncAsnIntContent

#define BDecPathItemIdContent BDecAsnIntContent

#define PrintPathItemId PrintAsnInt

#define FreePathItemId FreeAsnInt 




typedef AsnInt RapReleaseVersionNumber; /* [APPLICATION 543] IMPLICIT INTEGER */

#define BEncRapReleaseVersionNumberContent BEncAsnIntContent

#define BDecRapReleaseVersionNumberContent BDecAsnIntContent

#define PrintRapReleaseVersionNumber PrintAsnInt

#define FreeRapReleaseVersionNumber FreeAsnInt 




typedef AsnInt RapSpecificationVersionNumber; /* [APPLICATION 544] IMPLICIT INTEGER */

#define BEncRapSpecificationVersionNumberContent BEncAsnIntContent

#define BDecRapSpecificationVersionNumberContent BDecAsnIntContent

#define PrintRapSpecificationVersionNumber PrintAsnInt

#define FreeRapSpecificationVersionNumber FreeAsnInt 




typedef AsnInt ReturnDetailsCount; /* [APPLICATION 528] IMPLICIT INTEGER */

#define BEncReturnDetailsCountContent BEncAsnIntContent

#define BDecReturnDetailsCountContent BDecAsnIntContent

#define PrintReturnDetailsCount PrintAsnInt

#define FreeReturnDetailsCount FreeAsnInt 




typedef struct DateTimeLong AckFileAvailableTimeStamp; /* [APPLICATION 515] IMPLICIT DateTimeLong */

#define BEncAckFileAvailableTimeStampContent BEncDateTimeLongContent

#define BDecAckFileAvailableTimeStampContent BDecDateTimeLongContent

#define PrintAckFileAvailableTimeStamp PrintDateTimeLong

#define FreeAckFileAvailableTimeStamp FreeDateTimeLong 




typedef struct DateTimeLong AckFileCreationTimeStamp; /* [APPLICATION 516] IMPLICIT DateTimeLong */

#define BEncAckFileCreationTimeStampContent BEncDateTimeLongContent

#define BDecAckFileCreationTimeStampContent BDecDateTimeLongContent

#define PrintAckFileCreationTimeStamp PrintDateTimeLong

#define FreeAckFileCreationTimeStamp FreeDateTimeLong 




typedef FileSequenceNumber EndMissingSeqNumber; /* [APPLICATION 518] IMPLICIT FileSequenceNumber */

#define BEncEndMissingSeqNumberContent BEncFileSequenceNumberContent

#define BDecEndMissingSeqNumberContent BDecFileSequenceNumberContent

#define PrintEndMissingSeqNumber PrintFileSequenceNumber

#define FreeEndMissingSeqNumber FreeFileSequenceNumber 




typedef struct MessageDescriptionInformationDefinition /* [APPLICATION 143] IMPLICIT SEQUENCE */
{
    MessageDescriptionCode* messageDescriptionCode; /* MessageDescriptionCode OPTIONAL */
    MessageDescription messageDescription; /* MessageDescription OPTIONAL */
} MessageDescriptionInformationDefinition;

AsnLen BEncMessageDescriptionInformationDefinitionContent PROTO ((BUF_TYPE b, MessageDescriptionInformationDefinition *v));

void BDecMessageDescriptionInformationDefinitionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MessageDescriptionInformationDefinition *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMessageDescriptionInformationDefinition PROTO ((FILE* f, MessageDescriptionInformationDefinition *v, unsigned short int indent));
void FreeMessageDescriptionInformationDefinition PROTO ((MessageDescriptionInformationDefinition *v));





typedef AsnList OperatorSpecList; /* [APPLICATION 551] IMPLICIT SEQUENCE OF OperatorSpecInformation */

AsnLen BEncOperatorSpecListContent PROTO ((BUF_TYPE b, OperatorSpecList *v));

void BDecOperatorSpecListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, OperatorSpecList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintOperatorSpecList PROTO ((FILE* f, OperatorSpecList *v, unsigned short int indent));
void FreeOperatorSpecList PROTO ((OperatorSpecList *v));





typedef struct DateTimeLong RapFileAvailableTimeStamp; /* [APPLICATION 525] IMPLICIT DateTimeLong */

#define BEncRapFileAvailableTimeStampContent BEncDateTimeLongContent

#define BDecRapFileAvailableTimeStampContent BDecDateTimeLongContent

#define PrintRapFileAvailableTimeStamp PrintDateTimeLong

#define FreeRapFileAvailableTimeStamp FreeDateTimeLong 




typedef struct DateTimeLong RapFileCreationTimeStamp; /* [APPLICATION 526] IMPLICIT DateTimeLong */

#define BEncRapFileCreationTimeStampContent BEncDateTimeLongContent

#define BDecRapFileCreationTimeStampContent BDecDateTimeLongContent

#define PrintRapFileCreationTimeStamp PrintDateTimeLong

#define FreeRapFileCreationTimeStamp FreeDateTimeLong 




typedef PlmnId RoamingPartner; /* [APPLICATION 550] IMPLICIT PlmnId */

#define BEncRoamingPartnerContent BEncPlmnIdContent

#define BDecRoamingPartnerContent BDecPlmnIdContent

#define PrintRoamingPartner PrintPlmnId

#define FreeRoamingPartner FreePlmnId 




typedef AbsoluteAmount SevereReturnValue; /* [APPLICATION 529] IMPLICIT AbsoluteAmount */

#define BEncSevereReturnValueContent BEncAbsoluteAmountContent

#define BDecSevereReturnValueContent BDecAbsoluteAmountContent

#define PrintSevereReturnValue PrintAbsoluteAmount

#define FreeSevereReturnValue FreeAbsoluteAmount 




typedef FileSequenceNumber StartMissingSeqNumber; /* [APPLICATION 532] IMPLICIT FileSequenceNumber */

#define BEncStartMissingSeqNumberContent BEncFileSequenceNumberContent

#define BDecStartMissingSeqNumberContent BDecFileSequenceNumberContent

#define PrintStartMissingSeqNumber PrintFileSequenceNumber

#define FreeStartMissingSeqNumber FreeFileSequenceNumber 




typedef AbsoluteAmount TotalSevereReturnValue; /* [APPLICATION 533] IMPLICIT AbsoluteAmount */

#define BEncTotalSevereReturnValueContent BEncAbsoluteAmountContent

#define BDecTotalSevereReturnValueContent BDecAbsoluteAmountContent

#define PrintTotalSevereReturnValue PrintAbsoluteAmount

#define FreeTotalSevereReturnValue FreeAbsoluteAmount 




typedef struct Acknowledgement /* [APPLICATION 535] IMPLICIT SEQUENCE */
{
    Sender sender; /* Sender */
    Recipient recipient; /* Recipient */
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber */
    AckFileCreationTimeStamp* ackFileCreationTimeStamp; /* AckFileCreationTimeStamp */
    AckFileAvailableTimeStamp* ackFileAvailableTimeStamp; /* AckFileAvailableTimeStamp */
    FileTypeIndicator fileTypeIndicator; /* FileTypeIndicator OPTIONAL */
    OperatorSpecList* operatorSpecList; /* OperatorSpecList OPTIONAL */
} Acknowledgement;

AsnLen BEncAcknowledgementContent PROTO ((BUF_TYPE b, Acknowledgement *v));

void BDecAcknowledgementContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Acknowledgement *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintAcknowledgement PROTO ((FILE* f, Acknowledgement *v, unsigned short int indent));
void FreeAcknowledgement PROTO ((Acknowledgement *v));





typedef struct RapBatchControlInfo /* [APPLICATION 537] IMPLICIT SEQUENCE */
{
    Sender sender; /* Sender */
    Recipient recipient; /* Recipient */
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber */
    RapFileCreationTimeStamp* rapFileCreationTimeStamp; /* RapFileCreationTimeStamp */
    RapFileAvailableTimeStamp* rapFileAvailableTimeStamp; /* RapFileAvailableTimeStamp */
    SpecificationVersionNumber* specificationVersionNumber; /* SpecificationVersionNumber OPTIONAL */
    ReleaseVersionNumber* releaseVersionNumber; /* ReleaseVersionNumber OPTIONAL */
    RapSpecificationVersionNumber rapSpecificationVersionNumber; /* RapSpecificationVersionNumber */
    RapReleaseVersionNumber rapReleaseVersionNumber; /* RapReleaseVersionNumber */
    FileTypeIndicator fileTypeIndicator; /* FileTypeIndicator OPTIONAL */
    RoamingPartner roamingPartner; /* RoamingPartner OPTIONAL */
    OperatorSpecList* operatorSpecList; /* OperatorSpecList OPTIONAL */
} RapBatchControlInfo;

AsnLen BEncRapBatchControlInfoContent PROTO ((BUF_TYPE b, RapBatchControlInfo *v));

void BDecRapBatchControlInfoContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, RapBatchControlInfo *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintRapBatchControlInfo PROTO ((FILE* f, RapBatchControlInfo *v, unsigned short int indent));
void FreeRapBatchControlInfo PROTO ((RapBatchControlInfo *v));





typedef struct MissingReturn /* [APPLICATION 538] IMPLICIT SEQUENCE */
{
    StartMissingSeqNumber startMissingSeqNumber; /* StartMissingSeqNumber */
    EndMissingSeqNumber endMissingSeqNumber; /* EndMissingSeqNumber OPTIONAL */
    OperatorSpecList* operatorSpecList; /* OperatorSpecList OPTIONAL */
} MissingReturn;

AsnLen BEncMissingReturnContent PROTO ((BUF_TYPE b, MissingReturn *v));

void BDecMissingReturnContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MissingReturn *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMissingReturn PROTO ((FILE* f, MissingReturn *v, unsigned short int indent));
void FreeMissingReturn PROTO ((MissingReturn *v));





typedef struct ErrorContext /* [APPLICATION 545] IMPLICIT SEQUENCE */
{
    PathItemId pathItemId; /* PathItemId */
    ItemOccurrence* itemOccurrence; /* ItemOccurrence OPTIONAL */
    ItemLevel itemLevel; /* ItemLevel */
} ErrorContext;

AsnLen BEncErrorContextContent PROTO ((BUF_TYPE b, ErrorContext *v));

void BDecErrorContextContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ErrorContext *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintErrorContext PROTO ((FILE* f, ErrorContext *v, unsigned short int indent));
void FreeErrorContext PROTO ((ErrorContext *v));





typedef AsnList ErrorContextList; /* [APPLICATION 549] IMPLICIT SEQUENCE OF ErrorContext */

AsnLen BEncErrorContextListContent PROTO ((BUF_TYPE b, ErrorContextList *v));

void BDecErrorContextListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ErrorContextList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintErrorContextList PROTO ((FILE* f, ErrorContextList *v, unsigned short int indent));
void FreeErrorContextList PROTO ((ErrorContextList *v));





typedef struct ErrorDetail /* [APPLICATION 521] IMPLICIT SEQUENCE */
{
    ErrorContextList* errorContext; /* ErrorContextList OPTIONAL */
    ItemOffset* itemOffset; /* ItemOffset OPTIONAL */
    ErrorCode errorCode; /* ErrorCode */
} ErrorDetail;

AsnLen BEncErrorDetailContent PROTO ((BUF_TYPE b, ErrorDetail *v));

void BDecErrorDetailContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ErrorDetail *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintErrorDetail PROTO ((FILE* f, ErrorDetail *v, unsigned short int indent));
void FreeErrorDetail PROTO ((ErrorDetail *v));





typedef AsnList ErrorDetailList; /* [APPLICATION 520] IMPLICIT SEQUENCE OF ErrorDetail */

AsnLen BEncErrorDetailListContent PROTO ((BUF_TYPE b, ErrorDetailList *v));

void BDecErrorDetailListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ErrorDetailList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintErrorDetailList PROTO ((FILE* f, ErrorDetailList *v, unsigned short int indent));
void FreeErrorDetailList PROTO ((ErrorDetailList *v));





typedef AsnList MessageDescriptionInfoList1; /* [APPLICATION 8] IMPLICIT SEQUENCE OF MessageDescriptionInformationDefinition */

AsnLen BEncMessageDescriptionInfoList1Content PROTO ((BUF_TYPE b, MessageDescriptionInfoList1 *v));

void BDecMessageDescriptionInfoList1Content PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MessageDescriptionInfoList1 *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMessageDescriptionInfoList1 PROTO ((FILE* f, MessageDescriptionInfoList1 *v, unsigned short int indent));
void FreeMessageDescriptionInfoList1 PROTO ((MessageDescriptionInfoList1 *v));





typedef struct NetworkInfoError /* [APPLICATION 523] IMPLICIT SEQUENCE */
{
    struct NetworkInfo* networkInfo; /* NetworkInfo */
    ErrorDetailList* errorDetail; /* ErrorDetailList */
} NetworkInfoError;

AsnLen BEncNetworkInfoErrorContent PROTO ((BUF_TYPE b, NetworkInfoError *v));

void BDecNetworkInfoErrorContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NetworkInfoError *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintNetworkInfoError PROTO ((FILE* f, NetworkInfoError *v, unsigned short int indent));
void FreeNetworkInfoError PROTO ((NetworkInfoError *v));





typedef struct NotificationError /* [APPLICATION 552] IMPLICIT SEQUENCE */
{
    struct Notification* notification; /* Notification */
    ErrorDetailList* errorDetail; /* ErrorDetailList */
} NotificationError;

AsnLen BEncNotificationErrorContent PROTO ((BUF_TYPE b, NotificationError *v));

void BDecNotificationErrorContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NotificationError *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintNotificationError PROTO ((FILE* f, NotificationError *v, unsigned short int indent));
void FreeNotificationError PROTO ((NotificationError *v));





typedef struct ReturnSummary /* [APPLICATION 530] IMPLICIT SEQUENCE */
{
    FileSequenceNumber fileSequenceNumber; /* FileSequenceNumber */
    SevereReturnValue* severeReturnValue; /* SevereReturnValue OPTIONAL */
} ReturnSummary;

AsnLen BEncReturnSummaryContent PROTO ((BUF_TYPE b, ReturnSummary *v));

void BDecReturnSummaryContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ReturnSummary *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintReturnSummary PROTO ((FILE* f, ReturnSummary *v, unsigned short int indent));
void FreeReturnSummary PROTO ((ReturnSummary *v));





typedef AsnList ReturnSummaryList; /* [APPLICATION 531] IMPLICIT SEQUENCE OF ReturnSummary */

AsnLen BEncReturnSummaryListContent PROTO ((BUF_TYPE b, ReturnSummaryList *v));

void BDecReturnSummaryListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ReturnSummaryList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintReturnSummaryList PROTO ((FILE* f, ReturnSummaryList *v, unsigned short int indent));
void FreeReturnSummaryList PROTO ((ReturnSummaryList *v));





typedef struct TransferBatchError /* [APPLICATION 542] IMPLICIT SEQUENCE */
{
    ErrorDetailList* errorDetail; /* ErrorDetailList */
} TransferBatchError;

AsnLen BEncTransferBatchErrorContent PROTO ((BUF_TYPE b, TransferBatchError *v));

void BDecTransferBatchErrorContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TransferBatchError *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTransferBatchError PROTO ((FILE* f, TransferBatchError *v, unsigned short int indent));
void FreeTransferBatchError PROTO ((TransferBatchError *v));





typedef struct SevereReturn /* [APPLICATION 540] IMPLICIT SEQUENCE */
{
    FileSequenceNumber fileSequenceNumber; /* FileSequenceNumber */
    struct CallEventDetail* callEventDetail; /* CallEventDetail */
    ErrorDetailList* errorDetail; /* ErrorDetailList */
    OperatorSpecList* operatorSpecList; /* OperatorSpecList OPTIONAL */
} SevereReturn;

AsnLen BEncSevereReturnContent PROTO ((BUF_TYPE b, SevereReturn *v));

void BDecSevereReturnContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SevereReturn *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintSevereReturn PROTO ((FILE* f, SevereReturn *v, unsigned short int indent));
void FreeSevereReturn PROTO ((SevereReturn *v));





typedef struct RapAuditControlInfo /* [APPLICATION 541] IMPLICIT SEQUENCE */
{
    ReturnSummaryList* returnSummaryList; /* ReturnSummaryList OPTIONAL */
    TotalSevereReturnValue totalSevereReturnValue; /* TotalSevereReturnValue */
    ReturnDetailsCount returnDetailsCount; /* ReturnDetailsCount */
    OperatorSpecList* operatorSpecList; /* OperatorSpecList OPTIONAL */
} RapAuditControlInfo;

AsnLen BEncRapAuditControlInfoContent PROTO ((BUF_TYPE b, RapAuditControlInfo *v));

void BDecRapAuditControlInfoContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, RapAuditControlInfo *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintRapAuditControlInfo PROTO ((FILE* f, RapAuditControlInfo *v, unsigned short int indent));
void FreeRapAuditControlInfo PROTO ((RapAuditControlInfo *v));





typedef struct AccountingInfoError /* [APPLICATION 512] IMPLICIT SEQUENCE */
{
    struct AccountingInfo* accountingInfo; /* AccountingInfo */
    ErrorDetailList* errorDetail; /* ErrorDetailList */
} AccountingInfoError;

AsnLen BEncAccountingInfoErrorContent PROTO ((BUF_TYPE b, AccountingInfoError *v));

void BDecAccountingInfoErrorContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, AccountingInfoError *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintAccountingInfoError PROTO ((FILE* f, AccountingInfoError *v, unsigned short int indent));
void FreeAccountingInfoError PROTO ((AccountingInfoError *v));





typedef struct AuditControlInfoError /* [APPLICATION 513] IMPLICIT SEQUENCE */
{
    struct AuditControlInfo* auditControlInfo; /* AuditControlInfo */
    ErrorDetailList* errorDetail; /* ErrorDetailList */
} AuditControlInfoError;

AsnLen BEncAuditControlInfoErrorContent PROTO ((BUF_TYPE b, AuditControlInfoError *v));

void BDecAuditControlInfoErrorContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, AuditControlInfoError *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintAuditControlInfoError PROTO ((FILE* f, AuditControlInfoError *v, unsigned short int indent));
void FreeAuditControlInfoError PROTO ((AuditControlInfoError *v));





typedef struct BatchControlError /* [APPLICATION 517] IMPLICIT SEQUENCE */
{
    struct BatchControlInfo* batchControlInfo; /* BatchControlInfo */
    ErrorDetailList* errorDetail; /* ErrorDetailList */
} BatchControlError;

AsnLen BEncBatchControlErrorContent PROTO ((BUF_TYPE b, BatchControlError *v));

void BDecBatchControlErrorContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, BatchControlError *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintBatchControlError PROTO ((FILE* f, BatchControlError *v, unsigned short int indent));
void FreeBatchControlError PROTO ((BatchControlError *v));





typedef struct MessageDescriptionError /* [APPLICATION 522] IMPLICIT SEQUENCE */
{
    MessageDescriptionInfoList1* messageDescriptionInfo; /* MessageDescriptionInfoList */
    ErrorDetailList* errorDetail; /* ErrorDetailList */
} MessageDescriptionError;

AsnLen BEncMessageDescriptionErrorContent PROTO ((BUF_TYPE b, MessageDescriptionError *v));

void BDecMessageDescriptionErrorContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MessageDescriptionError *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMessageDescriptionError PROTO ((FILE* f, MessageDescriptionError *v, unsigned short int indent));
void FreeMessageDescriptionError PROTO ((MessageDescriptionError *v));





typedef struct FatalReturn /* [APPLICATION 539] IMPLICIT SEQUENCE */
{
    FileSequenceNumber fileSequenceNumber; /* FileSequenceNumber */
    struct TransferBatchError* transferBatchError; /* TransferBatchError OPTIONAL */
    struct NotificationError* notificationError; /* NotificationError OPTIONAL */
    struct BatchControlError* batchControlError; /* BatchControlError OPTIONAL */
    struct AccountingInfoError* accountingInfoError; /* AccountingInfoError OPTIONAL */
    struct NetworkInfoError* networkInfoError; /* NetworkInfoError OPTIONAL */
    struct MessageDescriptionError* messageDescriptionError; /* MessageDescriptionError OPTIONAL */
    struct AuditControlInfoError* auditControlInfoError; /* AuditControlInfoError OPTIONAL */
    OperatorSpecList* operatorSpecList; /* OperatorSpecList OPTIONAL */
} FatalReturn;

AsnLen BEncFatalReturnContent PROTO ((BUF_TYPE b, FatalReturn *v));

void BDecFatalReturnContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, FatalReturn *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintFatalReturn PROTO ((FILE* f, FatalReturn *v, unsigned short int indent));
void FreeFatalReturn PROTO ((FatalReturn *v));





typedef struct ReturnDetail /* CHOICE */
{
    enum ReturnDetailChoiceId
    {
        RETURNDETAIL_MISSINGRETURN,
        RETURNDETAIL_FATALRETURN,
        RETURNDETAIL_SEVERERETURN
    } choiceId;
    union ReturnDetailChoiceUnion
    {
    struct MissingReturn* missingReturn; /* MissingReturn */
    struct FatalReturn* fatalReturn; /* FatalReturn */
    struct SevereReturn* severeReturn; /* SevereReturn */
    } a;
} ReturnDetail;

AsnLen BEncReturnDetailContent PROTO ((BUF_TYPE b, ReturnDetail *v));

void BDecReturnDetailContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ReturnDetail *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintReturnDetail PROTO ((FILE* f, ReturnDetail *v, unsigned short int indent));
void FreeReturnDetail PROTO ((ReturnDetail *v));





typedef AsnList ReturnDetailList; /* [APPLICATION 536] IMPLICIT SEQUENCE OF ReturnDetail */

AsnLen BEncReturnDetailListContent PROTO ((BUF_TYPE b, ReturnDetailList *v));

void BDecReturnDetailListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ReturnDetailList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintReturnDetailList PROTO ((FILE* f, ReturnDetailList *v, unsigned short int indent));
void FreeReturnDetailList PROTO ((ReturnDetailList *v));





typedef struct ReturnBatch /* [APPLICATION 534] IMPLICIT SEQUENCE */
{
    struct RapBatchControlInfo* rapBatchControlInfoRap; /* RapBatchControlInfo */
    ReturnDetailList* returnDetails; /* ReturnDetailList */
    struct RapAuditControlInfo* rapAuditControlInfo; /* RapAuditControlInfo */
} ReturnBatch;

AsnLen BEncReturnBatchContent PROTO ((BUF_TYPE b, ReturnBatch *v));

void BDecReturnBatchContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ReturnBatch *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintReturnBatch PROTO ((FILE* f, ReturnBatch *v, unsigned short int indent));
void FreeReturnBatch PROTO ((ReturnBatch *v));





typedef struct RapDataInterChange /* CHOICE */
{
    enum RapDataInterChangeChoiceId
    {
        RAPDATAINTERCHANGE_RETURNBATCH,
        RAPDATAINTERCHANGE_ACKNOWLEDGEMENT
    } choiceId;
    union RapDataInterChangeChoiceUnion
    {
    struct ReturnBatch* returnBatch; /* ReturnBatch */
    struct Acknowledgement* acknowledgement; /* Acknowledgement */
    } a;
} RapDataInterChange;

AsnLen BEncRapDataInterChangeContent PROTO ((BUF_TYPE b, RapDataInterChange *v));

void BDecRapDataInterChangeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, RapDataInterChange *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintRapDataInterChange PROTO ((FILE* f, RapDataInterChange *v, unsigned short int indent));
void FreeRapDataInterChange PROTO ((RapDataInterChange *v));






#endif /* conditional include of rap103.h */
