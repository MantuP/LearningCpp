/*
 *    tap311.h
 *
 *    "TAP-0311" ASN.1 module C type definitions and prototypes
 *
 *    This .h file was generated by snacc on Thu Jul 30 16:13:48 2009
 *
 *    UBC snacc written compiler by Mike Sample
 *
 *    NOTE: This is a machine generated file--editing not recommended
 */


#ifndef _tap311_h_
#define _tap311_h_




typedef AsnInt AgeOfLocation; /* [APPLICATION 396] IMPLICIT INTEGER */

#define BEncAgeOfLocationContent BEncAsnIntContent

#define BDecAgeOfLocationContent BDecAsnIntContent

#define PrintAgeOfLocation PrintAsnInt

#define FreeAgeOfLocation FreeAsnInt 




typedef AsnInt CallEventDetailsCount; /* [APPLICATION 43] IMPLICIT INTEGER */

#define BEncCallEventDetailsCountContent BEncAsnIntContent

#define BDecCallEventDetailsCountContent BDecAsnIntContent

#define PrintCallEventDetailsCount PrintAsnInt

#define FreeCallEventDetailsCount FreeAsnInt 




typedef AsnOcts CallReference; /* [APPLICATION 45] IMPLICIT OCTET STRING */

#define BEncCallReferenceContent BEncAsnOctsContent

#define BDecCallReferenceContent BDecAsnOctsContent

#define PrintCallReference PrintAsnOcts

#define FreeCallReference FreeAsnOcts 




typedef AsnInt CallTypeLevel1; /* [APPLICATION 259] IMPLICIT INTEGER */

#define BEncCallTypeLevel1Content BEncAsnIntContent

#define BDecCallTypeLevel1Content BDecAsnIntContent

#define PrintCallTypeLevel1 PrintAsnInt

#define FreeCallTypeLevel1 FreeAsnInt 




typedef AsnInt CallTypeLevel2; /* [APPLICATION 255] IMPLICIT INTEGER */

#define BEncCallTypeLevel2Content BEncAsnIntContent

#define BDecCallTypeLevel2Content BDecAsnIntContent

#define PrintCallTypeLevel2 PrintAsnInt

#define FreeCallTypeLevel2 FreeAsnInt 




typedef AsnInt CallTypeLevel3; /* [APPLICATION 256] IMPLICIT INTEGER */

#define BEncCallTypeLevel3Content BEncAsnIntContent

#define BDecCallTypeLevel3Content BDecAsnIntContent

#define PrintCallTypeLevel3 PrintAsnInt

#define FreeCallTypeLevel3 FreeAsnInt 




typedef AsnInt CamelServiceKey; /* [APPLICATION 55] IMPLICIT INTEGER */

#define BEncCamelServiceKeyContent BEncAsnIntContent

#define BDecCamelServiceKeyContent BDecAsnIntContent

#define PrintCamelServiceKey PrintAsnInt

#define FreeCamelServiceKey FreeAsnInt 




typedef AsnInt CamelServiceLevel; /* [APPLICATION 56] IMPLICIT INTEGER */

#define BEncCamelServiceLevelContent BEncAsnIntContent

#define BDecCamelServiceLevelContent BDecAsnIntContent

#define PrintCamelServiceLevel PrintAsnInt

#define FreeCamelServiceLevel FreeAsnInt 




typedef AsnInt CauseForTerm; /* [APPLICATION 58] IMPLICIT INTEGER */

#define BEncCauseForTermContent BEncAsnIntContent

#define BDecCauseForTermContent BDecAsnIntContent

#define PrintCauseForTerm PrintAsnInt

#define FreeCauseForTerm FreeAsnInt 




typedef AsnInt CellId; /* [APPLICATION 59] IMPLICIT INTEGER */

#define BEncCellIdContent BEncAsnIntContent

#define BDecCellIdContent BDecAsnIntContent

#define PrintCellId PrintAsnInt

#define FreeCellId FreeAsnInt 




typedef AsnInt ChargeableUnits; /* [APPLICATION 65] IMPLICIT INTEGER */

#define BEncChargeableUnitsContent BEncAsnIntContent

#define BDecChargeableUnitsContent BDecAsnIntContent

#define PrintChargeableUnits PrintAsnInt

#define FreeChargeableUnits FreeAsnInt 




typedef AsnInt ChargedPartyIdType; /* [APPLICATION 305] IMPLICIT INTEGER */

#define BEncChargedPartyIdTypeContent BEncAsnIntContent

#define BDecChargedPartyIdTypeContent BDecAsnIntContent

#define PrintChargedPartyIdType PrintAsnInt

#define FreeChargedPartyIdType FreeAsnInt 




typedef AsnInt ChargedPartyStatus; /* [APPLICATION 67] IMPLICIT INTEGER */

#define BEncChargedPartyStatusContent BEncAsnIntContent

#define BDecChargedPartyStatusContent BDecAsnIntContent

#define PrintChargedPartyStatus PrintAsnInt

#define FreeChargedPartyStatus FreeAsnInt 




typedef AsnInt ChargedUnits; /* [APPLICATION 68] IMPLICIT INTEGER */

#define BEncChargedUnitsContent BEncAsnIntContent

#define BDecChargedUnitsContent BDecAsnIntContent

#define PrintChargedUnits PrintAsnInt

#define FreeChargedUnits FreeAsnInt 




typedef AsnInt ChargeRefundIndicator; /* [APPLICATION 344] IMPLICIT INTEGER */

#define BEncChargeRefundIndicatorContent BEncAsnIntContent

#define BDecChargeRefundIndicatorContent BDecAsnIntContent

#define PrintChargeRefundIndicator PrintAsnInt

#define FreeChargeRefundIndicator FreeAsnInt 




typedef UAsnInt ChargingId; /* [APPLICATION 72] IMPLICIT INTEGER */

#define BEncChargingIdContent BEncUAsnIntContent

#define BDecChargingIdContent BDecUAsnIntContent

#define PrintChargingId PrintAsnInt

#define FreeChargingId FreeAsnInt 




typedef AsnInt ClirIndicator; /* [APPLICATION 75] IMPLICIT INTEGER */

#define BEncClirIndicatorContent BEncAsnIntContent

#define BDecClirIndicatorContent BDecAsnIntContent

#define PrintClirIndicator PrintAsnInt

#define FreeClirIndicator FreeAsnInt 




typedef AsnInt ContentChargingPoint; /* [APPLICATION 345] IMPLICIT INTEGER */

#define BEncContentChargingPointContent BEncAsnIntContent

#define BDecContentChargingPointContent BDecAsnIntContent

#define PrintContentChargingPoint PrintAsnInt

#define FreeContentChargingPoint FreeAsnInt 




typedef AsnInt ContentProviderIdType; /* [APPLICATION 291] IMPLICIT INTEGER */

#define BEncContentProviderIdTypeContent BEncAsnIntContent

#define BDecContentProviderIdTypeContent BDecAsnIntContent

#define PrintContentProviderIdType PrintAsnInt

#define FreeContentProviderIdType FreeAsnInt 




typedef AsnInt ContentTransactionCode; /* [APPLICATION 336] IMPLICIT INTEGER */

#define BEncContentTransactionCodeContent BEncAsnIntContent

#define BDecContentTransactionCodeContent BDecAsnIntContent

#define PrintContentTransactionCode PrintAsnInt

#define FreeContentTransactionCode FreeAsnInt 




typedef AsnInt ContentTransactionType; /* [APPLICATION 337] IMPLICIT INTEGER */

#define BEncContentTransactionTypeContent BEncAsnIntContent

#define BDecContentTransactionTypeContent BDecAsnIntContent

#define PrintContentTransactionType PrintAsnInt

#define FreeContentTransactionType FreeAsnInt 




typedef AsnOcts CseInformation; /* [APPLICATION 79] IMPLICIT OCTET STRING */

#define BEncCseInformationContent BEncAsnOctsContent

#define BDecCseInformationContent BDecAsnOctsContent

#define PrintCseInformation PrintAsnOcts

#define FreeCseInformation FreeAsnOcts 




typedef AsnInt CustomerIdType; /* [APPLICATION 363] IMPLICIT INTEGER */

#define BEncCustomerIdTypeContent BEncAsnIntContent

#define BDecCustomerIdTypeContent BDecAsnIntContent

#define PrintCustomerIdType PrintAsnInt

#define FreeCustomerIdType FreeAsnInt 




typedef AsnInt DataVolume; /* INTEGER */

#define BEncDataVolumeContent BEncAsnIntContent

#define BDecDataVolumeContent BDecAsnIntContent

#define PrintDataVolume PrintAsnInt

#define FreeDataVolume FreeAsnInt 




typedef AsnInt DefaultCallHandlingIndicator; /* [APPLICATION 87] IMPLICIT INTEGER */

#define BEncDefaultCallHandlingIndicatorContent BEncAsnIntContent

#define BDecDefaultCallHandlingIndicatorContent BDecAsnIntContent

#define PrintDefaultCallHandlingIndicator PrintAsnInt

#define FreeDefaultCallHandlingIndicator FreeAsnInt 




typedef AsnInt DiscountCode; /* [APPLICATION 91] IMPLICIT INTEGER */

#define BEncDiscountCodeContent BEncAsnIntContent

#define BDecDiscountCodeContent BDecAsnIntContent

#define PrintDiscountCode PrintAsnInt

#define FreeDiscountCode FreeAsnInt 




typedef AsnInt EquipmentIdType; /* [APPLICATION 322] IMPLICIT INTEGER */

#define BEncEquipmentIdTypeContent BEncAsnIntContent

#define BDecEquipmentIdTypeContent BDecAsnIntContent

#define PrintEquipmentIdType PrintAsnInt

#define FreeEquipmentIdType FreeAsnInt 




typedef AsnInt ExchangeRate; /* [APPLICATION 104] IMPLICIT INTEGER */

#define BEncExchangeRateContent BEncAsnIntContent

#define BDecExchangeRateContent BDecAsnIntContent

#define PrintExchangeRate PrintAsnInt

#define FreeExchangeRate FreeAsnInt 




typedef AsnInt Fnur; /* [APPLICATION 111] IMPLICIT INTEGER */

#define BEncFnurContent BEncAsnIntContent

#define BDecFnurContent BDecAsnIntContent

#define PrintFnur PrintAsnInt

#define FreeFnur FreeAsnInt 




typedef AsnOcts GuaranteedBitRate; /* [APPLICATION 420] IMPLICIT OCTET STRING */

#define BEncGuaranteedBitRateContent BEncAsnOctsContent

#define BDecGuaranteedBitRateContent BDecAsnOctsContent

#define PrintGuaranteedBitRate PrintAsnOcts

#define FreeGuaranteedBitRate FreeAsnOcts 




typedef AsnInt HomeIdType; /* [APPLICATION 311] IMPLICIT INTEGER */

#define BEncHomeIdTypeContent BEncAsnIntContent

#define BDecHomeIdTypeContent BDecAsnIntContent

#define PrintHomeIdType PrintAsnInt

#define FreeHomeIdType FreeAsnInt 




typedef AsnInt HorizontalAccuracyDelivered; /* [APPLICATION 392] IMPLICIT INTEGER */

#define BEncHorizontalAccuracyDeliveredContent BEncAsnIntContent

#define BDecHorizontalAccuracyDeliveredContent BDecAsnIntContent

#define PrintHorizontalAccuracyDelivered PrintAsnInt

#define FreeHorizontalAccuracyDelivered FreeAsnInt 




typedef AsnInt HorizontalAccuracyRequested; /* [APPLICATION 385] IMPLICIT INTEGER */

#define BEncHorizontalAccuracyRequestedContent BEncAsnIntContent

#define BDecHorizontalAccuracyRequestedContent BDecAsnIntContent

#define PrintHorizontalAccuracyRequested PrintAsnInt

#define FreeHorizontalAccuracyRequested FreeAsnInt 




typedef AsnInt IMSSignallingContext; /* [APPLICATION 418] IMPLICIT INTEGER */

#define BEncIMSSignallingContextContent BEncAsnIntContent

#define BDecIMSSignallingContextContent BDecAsnIntContent

#define PrintIMSSignallingContext PrintAsnInt

#define FreeIMSSignallingContext FreeAsnInt 




typedef AsnInt IspIdType; /* [APPLICATION 293] IMPLICIT INTEGER */

#define BEncIspIdTypeContent BEncAsnIntContent

#define BDecIspIdTypeContent BDecAsnIntContent

#define PrintIspIdType PrintAsnInt

#define FreeIspIdType FreeAsnInt 




typedef AsnInt NetworkIdType; /* [APPLICATION 331] IMPLICIT INTEGER */

#define BEncNetworkIdTypeContent BEncAsnIntContent

#define BDecNetworkIdTypeContent BDecAsnIntContent

#define PrintNetworkIdType PrintAsnInt

#define FreeNetworkIdType FreeAsnInt 




typedef AsnInt LCSTransactionStatus; /* [APPLICATION 391] IMPLICIT INTEGER */

#define BEncLCSTransactionStatusContent BEncAsnIntContent

#define BDecLCSTransactionStatusContent BDecAsnIntContent

#define PrintLCSTransactionStatus PrintAsnInt

#define FreeLCSTransactionStatus FreeAsnInt 




typedef AsnInt LocationArea; /* [APPLICATION 136] IMPLICIT INTEGER */

#define BEncLocationAreaContent BEncAsnIntContent

#define BDecLocationAreaContent BDecAsnIntContent

#define PrintLocationArea PrintAsnInt

#define FreeLocationArea FreeAsnInt 




typedef AsnInt LocationIdType; /* [APPLICATION 315] IMPLICIT INTEGER */

#define BEncLocationIdTypeContent BEncAsnIntContent

#define BDecLocationIdTypeContent BDecAsnIntContent

#define PrintLocationIdType PrintAsnInt

#define FreeLocationIdType FreeAsnInt 




typedef AsnOcts MaximumBitRate; /* [APPLICATION 421] IMPLICIT OCTET STRING */

#define BEncMaximumBitRateContent BEncAsnOctsContent

#define BDecMaximumBitRateContent BDecAsnOctsContent

#define PrintMaximumBitRate PrintAsnOcts

#define FreeMaximumBitRate FreeAsnOcts 




typedef AsnInt MessageStatus; /* [APPLICATION 144] IMPLICIT INTEGER */

#define BEncMessageStatusContent BEncAsnIntContent

#define BDecMessageStatusContent BDecAsnIntContent

#define PrintMessageStatus PrintAsnInt

#define FreeMessageStatus FreeAsnInt 




typedef AsnInt MessageType; /* [APPLICATION 145] IMPLICIT INTEGER */

#define BEncMessageTypeContent BEncAsnIntContent

#define BDecMessageTypeContent BDecAsnIntContent

#define PrintMessageType PrintAsnInt

#define FreeMessageType FreeAsnInt 




typedef AsnInt NetworkInitPDPContext; /* [APPLICATION 245] IMPLICIT INTEGER */

#define BEncNetworkInitPDPContextContent BEncAsnIntContent

#define BDecNetworkInitPDPContextContent BDecAsnIntContent

#define PrintNetworkInitPDPContext PrintAsnInt

#define FreeNetworkInitPDPContext FreeAsnInt 




typedef AsnInt NumberOfDecimalPlaces; /* [APPLICATION 159] IMPLICIT INTEGER */

#define BEncNumberOfDecimalPlacesContent BEncAsnIntContent

#define BDecNumberOfDecimalPlacesContent BDecAsnIntContent

#define PrintNumberOfDecimalPlaces PrintAsnInt

#define FreeNumberOfDecimalPlaces FreeAsnInt 




typedef AsnInt ObjectType; /* [APPLICATION 281] IMPLICIT INTEGER */

#define BEncObjectTypeContent BEncAsnIntContent

#define BDecObjectTypeContent BDecAsnIntContent

#define PrintObjectType PrintAsnInt

#define FreeObjectType FreeAsnInt 




typedef AsnInt PaidIndicator; /* [APPLICATION 346] IMPLICIT INTEGER */

#define BEncPaidIndicatorContent BEncAsnIntContent

#define BDecPaidIndicatorContent BDecAsnIntContent

#define PrintPaidIndicator PrintAsnInt

#define FreePaidIndicator FreeAsnInt 




typedef AsnInt PaymentMethod; /* [APPLICATION 347] IMPLICIT INTEGER */

#define BEncPaymentMethodContent BEncAsnIntContent

#define BDecPaymentMethodContent BDecAsnIntContent

#define PrintPaymentMethod PrintAsnInt

#define FreePaymentMethod FreeAsnInt 




typedef AsnInt PositioningMethod; /* [APPLICATION 395] IMPLICIT INTEGER */

#define BEncPositioningMethodContent BEncAsnIntContent

#define BDecPositioningMethodContent BDecAsnIntContent

#define PrintPositioningMethod PrintAsnInt

#define FreePositioningMethod FreeAsnInt 




typedef AsnInt PriorityCode; /* [APPLICATION 170] IMPLICIT INTEGER */

#define BEncPriorityCodeContent BEncAsnIntContent

#define BDecPriorityCodeContent BDecAsnIntContent

#define PrintPriorityCode PrintAsnInt

#define FreePriorityCode FreeAsnInt 




typedef AsnInt RecEntityType; /* [APPLICATION 186] IMPLICIT INTEGER */

#define BEncRecEntityTypeContent BEncAsnIntContent

#define BDecRecEntityTypeContent BDecAsnIntContent

#define PrintRecEntityType PrintAsnInt

#define FreeRecEntityType FreeAsnInt 




typedef AsnInt ReleaseVersionNumber; /* [APPLICATION 189] IMPLICIT INTEGER */

#define BEncReleaseVersionNumberContent BEncAsnIntContent

#define BDecReleaseVersionNumberContent BDecAsnIntContent

#define PrintReleaseVersionNumber PrintAsnInt

#define FreeReleaseVersionNumber FreeAsnInt 




typedef AsnInt ResponseTime; /* [APPLICATION 394] IMPLICIT INTEGER */

#define BEncResponseTimeContent BEncAsnIntContent

#define BDecResponseTimeContent BDecAsnIntContent

#define PrintResponseTime PrintAsnInt

#define FreeResponseTime FreeAsnInt 




typedef AsnInt ResponseTimeCategory; /* [APPLICATION 387] IMPLICIT INTEGER */

#define BEncResponseTimeCategoryContent BEncAsnIntContent

#define BDecResponseTimeCategoryContent BDecAsnIntContent

#define PrintResponseTimeCategory PrintAsnInt

#define FreeResponseTimeCategory FreeAsnInt 




typedef AsnInt SpecificationVersionNumber; /* [APPLICATION 201] IMPLICIT INTEGER */

#define BEncSpecificationVersionNumberContent BEncAsnIntContent

#define BDecSpecificationVersionNumberContent BDecAsnIntContent

#define PrintSpecificationVersionNumber PrintAsnInt

#define FreeSpecificationVersionNumber FreeAsnInt 




typedef AsnInt SupplServiceActionCode; /* [APPLICATION 208] IMPLICIT INTEGER */

#define BEncSupplServiceActionCodeContent BEncAsnIntContent

#define BDecSupplServiceActionCodeContent BDecAsnIntContent

#define PrintSupplServiceActionCode PrintAsnInt

#define FreeSupplServiceActionCode FreeAsnInt 




typedef AsnInt TapDecimalPlaces; /* [APPLICATION 244] IMPLICIT INTEGER */

#define BEncTapDecimalPlacesContent BEncAsnIntContent

#define BDecTapDecimalPlacesContent BDecAsnIntContent

#define PrintTapDecimalPlaces PrintAsnInt

#define FreeTapDecimalPlaces FreeAsnInt 




typedef AsnInt TaxCode; /* [APPLICATION 212] IMPLICIT INTEGER */

#define BEncTaxCodeContent BEncAsnIntContent

#define BDecTaxCodeContent BDecAsnIntContent

#define PrintTaxCode PrintAsnInt

#define FreeTaxCode FreeAsnInt 




typedef AsnInt TotalCallEventDuration; /* [APPLICATION 223] IMPLICIT INTEGER */

#define BEncTotalCallEventDurationContent BEncAsnIntContent

#define BDecTotalCallEventDurationContent BDecAsnIntContent

#define PrintTotalCallEventDuration PrintAsnInt

#define FreeTotalCallEventDuration FreeAsnInt 




typedef AsnInt TrackingFrequency; /* [APPLICATION 389] IMPLICIT INTEGER */

#define BEncTrackingFrequencyContent BEncAsnIntContent

#define BDecTrackingFrequencyContent BDecAsnIntContent

#define PrintTrackingFrequency PrintAsnInt

#define FreeTrackingFrequency FreeAsnInt 




typedef AsnInt TrackingPeriod; /* [APPLICATION 388] IMPLICIT INTEGER */

#define BEncTrackingPeriodContent BEncAsnIntContent

#define BDecTrackingPeriodContent BDecAsnIntContent

#define PrintTrackingPeriod PrintAsnInt

#define FreeTrackingPeriod FreeAsnInt 




typedef AsnInt TransactionDescriptionSupp; /* [APPLICATION 338] IMPLICIT INTEGER */

#define BEncTransactionDescriptionSuppContent BEncAsnIntContent

#define BDecTransactionDescriptionSuppContent BDecAsnIntContent

#define PrintTransactionDescriptionSupp PrintAsnInt

#define FreeTransactionDescriptionSupp FreeAsnInt 




typedef AsnInt TransactionStatus; /* [APPLICATION 303] IMPLICIT INTEGER */

#define BEncTransactionStatusContent BEncAsnIntContent

#define BDecTransactionStatusContent BDecAsnIntContent

#define PrintTransactionStatus PrintAsnInt

#define FreeTransactionStatus FreeAsnInt 




typedef AsnInt TransparencyIndicator; /* [APPLICATION 228] IMPLICIT INTEGER */

#define BEncTransparencyIndicatorContent BEncAsnIntContent

#define BDecTransparencyIndicatorContent BDecAsnIntContent

#define PrintTransparencyIndicator PrintAsnInt

#define FreeTransparencyIndicator FreeAsnInt 




typedef AsnInt UserProtocolIndicator; /* [APPLICATION 280] IMPLICIT INTEGER */

#define BEncUserProtocolIndicatorContent BEncAsnIntContent

#define BDecUserProtocolIndicatorContent BDecAsnIntContent

#define PrintUserProtocolIndicator PrintAsnInt

#define FreeUserProtocolIndicator FreeAsnInt 




typedef AsnInt VerticalAccuracyDelivered; /* [APPLICATION 393] IMPLICIT INTEGER */

#define BEncVerticalAccuracyDeliveredContent BEncAsnIntContent

#define BDecVerticalAccuracyDeliveredContent BDecAsnIntContent

#define PrintVerticalAccuracyDelivered PrintAsnInt

#define FreeVerticalAccuracyDelivered FreeAsnInt 




typedef AsnInt VerticalAccuracyRequested; /* [APPLICATION 386] IMPLICIT INTEGER */

#define BEncVerticalAccuracyRequestedContent BEncAsnIntContent

#define BDecVerticalAccuracyRequestedContent BDecAsnIntContent

#define PrintVerticalAccuracyRequested PrintAsnInt

#define FreeVerticalAccuracyRequested FreeAsnInt 




typedef AsnInt AbsoluteAmount; /* INTEGER */

#define BEncAbsoluteAmountContent BEncAsnIntContent

#define BDecAbsoluteAmountContent BDecAsnIntContent

#define PrintAbsoluteAmount PrintAsnInt

#define FreeAbsoluteAmount FreeAsnInt 




typedef AsnInt Code; /* INTEGER */

#define BEncCodeContent BEncAsnIntContent

#define BDecCodeContent BDecAsnIntContent

#define PrintCode PrintAsnInt

#define FreeCode FreeAsnInt 




typedef AsnOcts AsciiString; /* OCTET STRING */

#define BEncAsciiStringContent BEncAsnOctsContent

#define BDecAsciiStringContent BDecAsnOctsContent

#define PrintAsciiString PrintAsnOcts

#define FreeAsciiString FreeAsnOcts 




typedef AsnOcts BCDString; /* OCTET STRING */

#define BEncBCDStringContent BEncAsnOctsContent

#define BDecBCDStringContent BDecAsnOctsContent

#define PrintBCDString PrintAsnOcts

#define FreeBCDString FreeAsnOcts 




typedef AsnOcts Currency; /* OCTET STRING */

#define BEncCurrencyContent BEncAsnOctsContent

#define BDecCurrencyContent BDecAsnOctsContent

#define PrintCurrency PrintAsnOcts

#define FreeCurrency FreeAsnOcts 




typedef AsnOcts HexString; /* OCTET STRING */

#define BEncHexStringContent BEncAsnOctsContent

#define BDecHexStringContent BDecAsnOctsContent

#define PrintHexString PrintAsnOcts

#define FreeHexString FreeAsnOcts 




typedef AsnOcts NumberString; /* OCTET STRING */

#define BEncNumberStringContent BEncAsnOctsContent

#define BDecNumberStringContent BDecAsnOctsContent

#define PrintNumberString PrintAsnOcts

#define FreeNumberString FreeAsnOcts 




typedef AsnInt PercentageRate; /* INTEGER */

#define BEncPercentageRateContent BEncAsnIntContent

#define BDecPercentageRateContent BDecAsnIntContent

#define PrintPercentageRate PrintAsnInt

#define FreePercentageRate FreeAsnInt 




typedef AsciiString AccessPointNameNI; /* [APPLICATION 261] IMPLICIT AsciiString */

#define BEncAccessPointNameNIContent BEncAsciiStringContent

#define BDecAccessPointNameNIContent BDecAsciiStringContent

#define PrintAccessPointNameNI PrintAsciiString

#define FreeAccessPointNameNI FreeAsciiString 




typedef AsciiString AccessPointNameOI; /* [APPLICATION 262] IMPLICIT AsciiString */

#define BEncAccessPointNameOIContent BEncAsciiStringContent

#define BDecAccessPointNameOIContent BDecAsciiStringContent

#define PrintAccessPointNameOI PrintAsciiString

#define FreeAccessPointNameOI FreeAsciiString 




typedef BCDString AddressStringDigits; /* BCDString */

#define BEncAddressStringDigitsContent BEncBCDStringContent

#define BDecAddressStringDigitsContent BDecBCDStringContent

#define PrintAddressStringDigits PrintBCDString

#define FreeAddressStringDigits FreeBCDString 




typedef Currency AdvisedChargeCurrency; /* [APPLICATION 348] IMPLICIT Currency */

#define BEncAdvisedChargeCurrencyContent BEncCurrencyContent

#define BDecAdvisedChargeCurrencyContent BDecCurrencyContent

#define PrintAdvisedChargeCurrency PrintCurrency

#define FreeAdvisedChargeCurrency FreeCurrency 




typedef HexString BearerServiceCode; /* [APPLICATION 40] IMPLICIT HexString */

#define BEncBearerServiceCodeContent BEncHexStringContent

#define BDecBearerServiceCodeContent BDecHexStringContent

#define PrintBearerServiceCode PrintHexString

#define FreeBearerServiceCode FreeHexString 




typedef AddressStringDigits CalledNumber; /* [APPLICATION 407] IMPLICIT AddressStringDigits */

#define BEncCalledNumberContent BEncAddressStringDigitsContent

#define BDecCalledNumberContent BDecAddressStringDigitsContent

#define PrintCalledNumber PrintAddressStringDigits

#define FreeCalledNumber FreeAddressStringDigits 




typedef AsciiString CalledPlace; /* [APPLICATION 42] IMPLICIT AsciiString */

#define BEncCalledPlaceContent BEncAsciiStringContent

#define BDecCalledPlaceContent BDecAsciiStringContent

#define PrintCalledPlace PrintAsciiString

#define FreeCalledPlace FreeAsciiString 




typedef AsciiString CalledRegion; /* [APPLICATION 46] IMPLICIT AsciiString */

#define BEncCalledRegionContent BEncAsciiStringContent

#define BDecCalledRegionContent BDecAsciiStringContent

#define PrintCalledRegion PrintAsciiString

#define FreeCalledRegion FreeAsciiString 




typedef AddressStringDigits CallingNumber; /* [APPLICATION 405] IMPLICIT AddressStringDigits */

#define BEncCallingNumberContent BEncAddressStringDigitsContent

#define BDecCallingNumberContent BDecAddressStringDigitsContent

#define PrintCallingNumber PrintAddressStringDigits

#define FreeCallingNumber FreeAddressStringDigits 




typedef struct CallTypeGroup /* [APPLICATION 258] IMPLICIT SEQUENCE */
{
    CallTypeLevel1* callTypeLevel1; /* CallTypeLevel1 OPTIONAL */
    CallTypeLevel2* callTypeLevel2; /* CallTypeLevel2 OPTIONAL */
    CallTypeLevel3* callTypeLevel3; /* CallTypeLevel3 OPTIONAL */
} CallTypeGroup;

AsnLen BEncCallTypeGroupContent PROTO ((BUF_TYPE b, CallTypeGroup *v));

void BDecCallTypeGroupContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CallTypeGroup *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintCallTypeGroup PROTO ((FILE* f, CallTypeGroup *v, unsigned short int indent));
void FreeCallTypeGroup PROTO ((CallTypeGroup *v));





typedef AddressStringDigits CamelDestinationNumber; /* [APPLICATION 404] IMPLICIT AddressStringDigits */

#define BEncCamelDestinationNumberContent BEncAddressStringDigitsContent

#define BDecCamelDestinationNumberContent BDecAddressStringDigitsContent

#define PrintCamelDestinationNumber PrintAddressStringDigits

#define FreeCamelDestinationNumber FreeAddressStringDigits 




typedef AbsoluteAmount CamelInvocationFee; /* [APPLICATION 422] IMPLICIT AbsoluteAmount */

#define BEncCamelInvocationFeeContent BEncAbsoluteAmountContent

#define BDecCamelInvocationFeeContent BDecAbsoluteAmountContent

#define PrintCamelInvocationFee PrintAbsoluteAmount

#define FreeCamelInvocationFee FreeAbsoluteAmount 




typedef AbsoluteAmount Charge; /* [APPLICATION 62] IMPLICIT AbsoluteAmount */

#define BEncChargeContent BEncAbsoluteAmountContent

#define BDecChargeContent BDecAbsoluteAmountContent

#define PrintCharge PrintAbsoluteAmount

#define FreeCharge FreeAbsoluteAmount 




typedef AsciiString ChargedItem; /* [APPLICATION 66] IMPLICIT AsciiString */

#define BEncChargedItemContent BEncAsciiStringContent

#define BDecChargedItemContent BDecAsciiStringContent

#define PrintChargedItem PrintAsciiString

#define FreeChargedItem FreeAsciiString 




typedef AsciiString ChargedPartyIdentifier; /* [APPLICATION 287] IMPLICIT AsciiString */

#define BEncChargedPartyIdentifierContent BEncAsciiStringContent

#define BDecChargedPartyIdentifierContent BDecAsciiStringContent

#define PrintChargedPartyIdentifier PrintAsciiString

#define FreeChargedPartyIdentifier FreeAsciiString 




typedef NumberString ChargeType; /* [APPLICATION 71] IMPLICIT NumberString */

#define BEncChargeTypeContent BEncNumberStringContent

#define BDecChargeTypeContent BDecNumberStringContent

#define PrintChargeType PrintNumberString

#define FreeChargeType FreeNumberString 




typedef AsciiString ChargingPoint; /* [APPLICATION 73] IMPLICIT AsciiString */

#define BEncChargingPointContent BEncAsciiStringContent

#define BDecChargingPointContent BDecAsciiStringContent

#define PrintChargingPoint PrintAsciiString

#define FreeChargingPoint FreeAsciiString 




typedef Charge Commission; /* [APPLICATION 350] IMPLICIT Charge */

#define BEncCommissionContent BEncChargeContent

#define BDecCommissionContent BDecChargeContent

#define PrintCommission PrintCharge

#define FreeCommission FreeCharge 




typedef AsciiString ContentProviderIdentifier; /* [APPLICATION 292] IMPLICIT AsciiString */

#define BEncContentProviderIdentifierContent BEncAsciiStringContent

#define BDecContentProviderIdentifierContent BDecAsciiStringContent

#define PrintContentProviderIdentifier PrintAsciiString

#define FreeContentProviderIdentifier FreeAsciiString 




typedef AsciiString ContentProviderName; /* [APPLICATION 334] IMPLICIT AsciiString */

#define BEncContentProviderNameContent BEncAsciiStringContent

#define BDecContentProviderNameContent BDecAsciiStringContent

#define PrintContentProviderName PrintAsciiString

#define FreeContentProviderName FreeAsciiString 




typedef AsciiString CustomerIdentifier; /* [APPLICATION 364] IMPLICIT AsciiString */

#define BEncCustomerIdentifierContent BEncAsciiStringContent

#define BDecCustomerIdentifierContent BDecAsciiStringContent

#define PrintCustomerIdentifier PrintAsciiString

#define FreeCustomerIdentifier FreeAsciiString 




typedef DataVolume DataVolumeIncoming; /* [APPLICATION 250] IMPLICIT DataVolume */

#define BEncDataVolumeIncomingContent BEncDataVolumeContent

#define BDecDataVolumeIncomingContent BDecDataVolumeContent

#define PrintDataVolumeIncoming PrintDataVolume

#define FreeDataVolumeIncoming FreeDataVolume 




typedef DataVolume DataVolumeOutgoing; /* [APPLICATION 251] IMPLICIT DataVolume */

#define BEncDataVolumeOutgoingContent BEncDataVolumeContent

#define BDecDataVolumeOutgoingContent BDecDataVolumeContent

#define PrintDataVolumeOutgoing PrintDataVolume

#define FreeDataVolumeOutgoing FreeDataVolume 




typedef AsciiString DialledDigits; /* [APPLICATION 279] IMPLICIT AsciiString */

#define BEncDialledDigitsContent BEncAsciiStringContent

#define BDecDialledDigitsContent BDecAsciiStringContent

#define PrintDialledDigits PrintAsciiString

#define FreeDialledDigits FreeAsciiString 




typedef AbsoluteAmount DiscountableAmount; /* [APPLICATION 423] IMPLICIT AbsoluteAmount */

#define BEncDiscountableAmountContent BEncAbsoluteAmountContent

#define BDecDiscountableAmountContent BDecAbsoluteAmountContent

#define PrintDiscountableAmount PrintAbsoluteAmount

#define FreeDiscountableAmount FreeAbsoluteAmount 




typedef PercentageRate DiscountRate; /* [APPLICATION 92] IMPLICIT PercentageRate */

#define BEncDiscountRateContent BEncPercentageRateContent

#define BDecDiscountRateContent BDecPercentageRateContent

#define PrintDiscountRate PrintPercentageRate

#define FreeDiscountRate FreePercentageRate 




typedef AbsoluteAmount DiscountValue; /* AbsoluteAmount */

#define BEncDiscountValueContent BEncAbsoluteAmountContent

#define BDecDiscountValueContent BDecAbsoluteAmountContent

#define PrintDiscountValue PrintAbsoluteAmount

#define FreeDiscountValue FreeAbsoluteAmount 




typedef AsciiString DistanceChargeBandCode; /* [APPLICATION 98] IMPLICIT AsciiString */

#define BEncDistanceChargeBandCodeContent BEncAsciiStringContent

#define BDecDistanceChargeBandCodeContent BDecAsciiStringContent

#define PrintDistanceChargeBandCode PrintAsciiString

#define FreeDistanceChargeBandCode FreeAsciiString 




typedef AsciiString EquipmentId; /* [APPLICATION 290] IMPLICIT AsciiString */

#define BEncEquipmentIdContent BEncAsciiStringContent

#define BDecEquipmentIdContent BDecAsciiStringContent

#define PrintEquipmentId PrintAsciiString

#define FreeEquipmentId FreeAsciiString 




typedef NumberString Esn; /* [APPLICATION 103] IMPLICIT NumberString */

#define BEncEsnContent BEncNumberStringContent

#define BDecEsnContent BDecNumberStringContent

#define PrintEsn PrintNumberString

#define FreeEsn FreeNumberString 




typedef Code ExchangeRateCode; /* [APPLICATION 105] IMPLICIT Code */

#define BEncExchangeRateCodeContent BEncCodeContent

#define BDecExchangeRateCodeContent BDecCodeContent

#define PrintExchangeRateCode PrintCode

#define FreeExchangeRateCode FreeCode 




typedef NumberString FileSequenceNumber; /* [APPLICATION 109] IMPLICIT NumberString */

#define BEncFileSequenceNumberContent BEncNumberStringContent

#define BDecFileSequenceNumberContent BDecNumberStringContent

#define PrintFileSequenceNumber PrintNumberString

#define FreeFileSequenceNumber FreeNumberString 




typedef AsciiString FileTypeIndicator; /* [APPLICATION 110] IMPLICIT AsciiString */

#define BEncFileTypeIndicatorContent BEncAsciiStringContent

#define BDecFileTypeIndicatorContent BDecAsciiStringContent

#define PrintFileTypeIndicator PrintAsciiString

#define FreeFileTypeIndicator FreeAsciiString 




typedef DiscountValue FixedDiscountValue; /* [APPLICATION 411] IMPLICIT DiscountValue */

#define BEncFixedDiscountValueContent BEncDiscountValueContent

#define BDecFixedDiscountValueContent BDecDiscountValueContent

#define PrintFixedDiscountValue PrintDiscountValue

#define FreeFixedDiscountValue FreeDiscountValue 




typedef struct GprsDestination /* [APPLICATION 116] IMPLICIT SEQUENCE */
{
    AccessPointNameNI accessPointNameNI; /* AccessPointNameNI OPTIONAL */
    AccessPointNameOI accessPointNameOI; /* AccessPointNameOI OPTIONAL */
} GprsDestination;

AsnLen BEncGprsDestinationContent PROTO ((BUF_TYPE b, GprsDestination *v));

void BDecGprsDestinationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GprsDestination *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintGprsDestination PROTO ((FILE* f, GprsDestination *v, unsigned short int indent));
void FreeGprsDestination PROTO ((GprsDestination *v));





typedef AsciiString HomeIdentifier; /* [APPLICATION 288] IMPLICIT AsciiString */

#define BEncHomeIdentifierContent BEncAsciiStringContent

#define BDecHomeIdentifierContent BDecAsciiStringContent

#define PrintHomeIdentifier PrintAsciiString

#define FreeHomeIdentifier FreeAsciiString 




typedef AsciiString HSCSDIndicator; /* [APPLICATION 424] IMPLICIT AsciiString */

#define BEncHSCSDIndicatorContent BEncAsciiStringContent

#define BDecHSCSDIndicatorContent BDecAsciiStringContent

#define PrintHSCSDIndicator PrintAsciiString

#define FreeHSCSDIndicator FreeAsciiString 




typedef BCDString Imei; /* [APPLICATION 128] IMPLICIT BCDString */

#define BEncImeiContent BEncBCDStringContent

#define BDecImeiContent BDecBCDStringContent

#define PrintImei PrintBCDString

#define FreeImei FreeBCDString 




typedef struct ImeiOrEsn /* [APPLICATION 429] CHOICE */
{
    enum ImeiOrEsnChoiceId
    {
        IMEIORESN_IMEI,
        IMEIORESN_ESN
    } choiceId;
    union ImeiOrEsnChoiceUnion
    {
    Imei* imei; /* Imei */
    Esn* esn; /* Esn */
    } a;
} ImeiOrEsn;

AsnLen BEncImeiOrEsnContent PROTO ((BUF_TYPE b, ImeiOrEsn *v));

void BDecImeiOrEsnContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ImeiOrEsn *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintImeiOrEsn PROTO ((FILE* f, ImeiOrEsn *v, unsigned short int indent));
void FreeImeiOrEsn PROTO ((ImeiOrEsn *v));





typedef BCDString Imsi; /* [APPLICATION 129] IMPLICIT BCDString */

#define BEncImsiContent BEncBCDStringContent

#define BDecImsiContent BDecBCDStringContent

#define PrintImsi PrintBCDString

#define FreeImsi FreeBCDString 




typedef AsciiString IspIdentifier; /* [APPLICATION 294] IMPLICIT AsciiString */

#define BEncIspIdentifierContent BEncAsciiStringContent

#define BDecIspIdentifierContent BDecAsciiStringContent

#define PrintIspIdentifier PrintAsciiString

#define FreeIspIdentifier FreeAsciiString 




typedef AsciiString NetworkIdentifier; /* [APPLICATION 295] IMPLICIT AsciiString */

#define BEncNetworkIdentifierContent BEncAsciiStringContent

#define BDecNetworkIdentifierContent BDecAsciiStringContent

#define PrintNetworkIdentifier PrintAsciiString

#define FreeNetworkIdentifier FreeAsciiString 




typedef struct Network /* [APPLICATION 332] IMPLICIT SEQUENCE */
{
    NetworkIdType* networkIdType; /* NetworkIdType OPTIONAL */
    NetworkIdentifier networkIdentifier; /* NetworkIdentifier OPTIONAL */
} Network;

AsnLen BEncNetworkContent PROTO ((BUF_TYPE b, Network *v));

void BDecNetworkContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Network *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintNetwork PROTO ((FILE* f, Network *v, unsigned short int indent));
void FreeNetwork PROTO ((Network *v));





typedef AsnList NetworkList; /* [APPLICATION 333] IMPLICIT SEQUENCE OF Network */

AsnLen BEncNetworkListContent PROTO ((BUF_TYPE b, NetworkList *v));

void BDecNetworkListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NetworkList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintNetworkList PROTO ((FILE* f, NetworkList *v, unsigned short int indent));
void FreeNetworkList PROTO ((NetworkList *v));





typedef struct LCSQosDelivered /* [APPLICATION 390] IMPLICIT SEQUENCE */
{
    LCSTransactionStatus* lCSTransactionStatus; /* LCSTransactionStatus OPTIONAL */
    HorizontalAccuracyDelivered* horizontalAccuracyDelivered; /* HorizontalAccuracyDelivered OPTIONAL */
    VerticalAccuracyDelivered* verticalAccuracyDelivered; /* VerticalAccuracyDelivered OPTIONAL */
    ResponseTime* responseTime; /* ResponseTime OPTIONAL */
    PositioningMethod* positioningMethod; /* PositioningMethod OPTIONAL */
    TrackingPeriod* trackingPeriod; /* TrackingPeriod OPTIONAL */
    TrackingFrequency* trackingFrequency; /* TrackingFrequency OPTIONAL */
    AgeOfLocation* ageOfLocation; /* AgeOfLocation OPTIONAL */
} LCSQosDelivered;

AsnLen BEncLCSQosDeliveredContent PROTO ((BUF_TYPE b, LCSQosDelivered *v));

void BDecLCSQosDeliveredContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LCSQosDelivered *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintLCSQosDelivered PROTO ((FILE* f, LCSQosDelivered *v, unsigned short int indent));
void FreeLCSQosDelivered PROTO ((LCSQosDelivered *v));





typedef struct LCSSPIdentification /* [APPLICATION 375] IMPLICIT SEQUENCE */
{
    ContentProviderIdType* contentProviderIdType; /* ContentProviderIdType OPTIONAL */
    ContentProviderIdentifier contentProviderIdentifier; /* ContentProviderIdentifier OPTIONAL */
} LCSSPIdentification;

AsnLen BEncLCSSPIdentificationContent PROTO ((BUF_TYPE b, LCSSPIdentification *v));

void BDecLCSSPIdentificationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LCSSPIdentification *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintLCSSPIdentification PROTO ((FILE* f, LCSSPIdentification *v, unsigned short int indent));
void FreeLCSSPIdentification PROTO ((LCSSPIdentification *v));





typedef AsnList LCSSPIdentificationList; /* [APPLICATION 374] IMPLICIT SEQUENCE OF LCSSPIdentification */

AsnLen BEncLCSSPIdentificationListContent PROTO ((BUF_TYPE b, LCSSPIdentificationList *v));

void BDecLCSSPIdentificationListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LCSSPIdentificationList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintLCSSPIdentificationList PROTO ((FILE* f, LCSSPIdentificationList *v, unsigned short int indent));
void FreeLCSSPIdentificationList PROTO ((LCSSPIdentificationList *v));





typedef Currency LocalCurrency; /* [APPLICATION 135] IMPLICIT Currency */

#define BEncLocalCurrencyContent BEncCurrencyContent

#define BDecLocalCurrencyContent BDecCurrencyContent

#define PrintLocalCurrency PrintCurrency

#define FreeLocalCurrency FreeCurrency 




typedef NumberString LocalTimeStamp; /* [APPLICATION 16] IMPLICIT NumberString */

#define BEncLocalTimeStampContent BEncNumberStringContent

#define BDecLocalTimeStampContent BDecNumberStringContent

#define PrintLocalTimeStamp PrintNumberString

#define FreeLocalTimeStamp FreeNumberString 




typedef AsciiString LocationDescription; /* AsciiString */

#define BEncLocationDescriptionContent BEncAsciiStringContent

#define BDecLocationDescriptionContent BDecAsciiStringContent

#define PrintLocationDescription PrintAsciiString

#define FreeLocationDescription FreeAsciiString 




typedef AsciiString LocationIdentifier; /* [APPLICATION 289] IMPLICIT AsciiString */

#define BEncLocationIdentifierContent BEncAsciiStringContent

#define BDecLocationIdentifierContent BDecAsciiStringContent

#define PrintLocationIdentifier PrintAsciiString

#define FreeLocationIdentifier FreeAsciiString 




typedef NumberString Mdn; /* [APPLICATION 253] IMPLICIT NumberString */

#define BEncMdnContent BEncNumberStringContent

#define BDecMdnContent BDecNumberStringContent

#define PrintMdn PrintNumberString

#define FreeMdn FreeNumberString 




typedef AsciiString MessageDescription; /* [APPLICATION 142] IMPLICIT AsciiString */

#define BEncMessageDescriptionContent BEncAsciiStringContent

#define BDecMessageDescriptionContent BDecAsciiStringContent

#define PrintMessageDescription PrintAsciiString

#define FreeMessageDescription FreeAsciiString 




typedef Code MessageDescriptionCode; /* [APPLICATION 141] IMPLICIT Code */

#define BEncMessageDescriptionCodeContent BEncCodeContent

#define BDecMessageDescriptionCodeContent BDecCodeContent

#define PrintMessageDescriptionCode PrintCode

#define FreeMessageDescriptionCode FreeCode 




typedef struct MessageDescriptionInformation /* [APPLICATION 143] IMPLICIT SEQUENCE */
{
    MessageDescriptionCode* messageDescriptionCode; /* MessageDescriptionCode OPTIONAL */
    MessageDescription messageDescription; /* MessageDescription OPTIONAL */
} MessageDescriptionInformation;

AsnLen BEncMessageDescriptionInformationContent PROTO ((BUF_TYPE b, MessageDescriptionInformation *v));

void BDecMessageDescriptionInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MessageDescriptionInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMessageDescriptionInformation PROTO ((FILE* f, MessageDescriptionInformation *v, unsigned short int indent));
void FreeMessageDescriptionInformation PROTO ((MessageDescriptionInformation *v));





typedef NumberString Min; /* [APPLICATION 146] IMPLICIT NumberString */

#define BEncMinContent BEncNumberStringContent

#define BDecMinContent BDecNumberStringContent

#define PrintMin PrintNumberString

#define FreeMin FreeNumberString 




typedef struct MinChargeableSubscriber /* [APPLICATION 254] IMPLICIT SEQUENCE */
{
    Min min; /* Min OPTIONAL */
    Mdn mdn; /* Mdn OPTIONAL */
} MinChargeableSubscriber;

AsnLen BEncMinChargeableSubscriberContent PROTO ((BUF_TYPE b, MinChargeableSubscriber *v));

void BDecMinChargeableSubscriberContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MinChargeableSubscriber *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMinChargeableSubscriber PROTO ((FILE* f, MinChargeableSubscriber *v, unsigned short int indent));
void FreeMinChargeableSubscriber PROTO ((MinChargeableSubscriber *v));





typedef BCDString Msisdn; /* [APPLICATION 152] IMPLICIT BCDString */

#define BEncMsisdnContent BEncBCDStringContent

#define BDecMsisdnContent BDecBCDStringContent

#define PrintMsisdn PrintBCDString

#define FreeMsisdn FreeBCDString 




typedef AsciiString NetworkAccessIdentifier; /* [APPLICATION 417] IMPLICIT AsciiString */

#define BEncNetworkAccessIdentifierContent BEncAsciiStringContent

#define BDecNetworkAccessIdentifierContent BDecAsciiStringContent

#define PrintNetworkAccessIdentifier PrintAsciiString

#define FreeNetworkAccessIdentifier FreeAsciiString 




typedef AsciiString NetworkId; /* AsciiString */

#define BEncNetworkIdContent BEncAsciiStringContent

#define BDecNetworkIdContent BDecAsciiStringContent

#define PrintNetworkId PrintAsciiString

#define FreeNetworkId FreeAsciiString 




typedef AsciiString NonChargedNumber; /* [APPLICATION 402] IMPLICIT AsciiString */

#define BEncNonChargedNumberContent BEncAsciiStringContent

#define BDecNonChargedNumberContent BDecAsciiStringContent

#define PrintNonChargedNumber PrintAsciiString

#define FreeNonChargedNumber FreeAsciiString 




typedef AsciiString OperatorSpecInformation; /* [APPLICATION 163] IMPLICIT AsciiString */

#define BEncOperatorSpecInformationContent BEncAsciiStringContent

#define BDecOperatorSpecInformationContent BDecAsciiStringContent

#define PrintOperatorSpecInformation PrintAsciiString

#define FreeOperatorSpecInformation FreeAsciiString 




typedef NetworkId OriginatingNetwork; /* [APPLICATION 164] IMPLICIT NetworkId */

#define BEncOriginatingNetworkContent BEncNetworkIdContent

#define BDecOriginatingNetworkContent BDecNetworkIdContent

#define PrintOriginatingNetwork PrintNetworkId

#define FreeOriginatingNetwork FreeNetworkId 




typedef AsciiString PacketDataProtocolAddress; /* [APPLICATION 165] IMPLICIT AsciiString */

#define BEncPacketDataProtocolAddressContent BEncAsciiStringContent

#define BDecPacketDataProtocolAddressContent BDecAsciiStringContent

#define PrintPacketDataProtocolAddress PrintAsciiString

#define FreePacketDataProtocolAddress FreeAsciiString 




typedef AsciiString PartialTypeIndicator; /* [APPLICATION 166] IMPLICIT AsciiString */

#define BEncPartialTypeIndicatorContent BEncAsciiStringContent

#define BDecPartialTypeIndicatorContent BDecAsciiStringContent

#define PrintPartialTypeIndicator PrintAsciiString

#define FreePartialTypeIndicator FreeAsciiString 




typedef PacketDataProtocolAddress PdpAddress; /* [APPLICATION 167] IMPLICIT PacketDataProtocolAddress */

#define BEncPdpAddressContent BEncPacketDataProtocolAddressContent

#define BDecPdpAddressContent BDecPacketDataProtocolAddressContent

#define PrintPdpAddress PrintPacketDataProtocolAddress

#define FreePdpAddress FreePacketDataProtocolAddress 




typedef AsciiString PlmnId; /* [APPLICATION 169] IMPLICIT AsciiString */

#define BEncPlmnIdContent BEncAsciiStringContent

#define BDecPlmnIdContent BDecAsciiStringContent

#define PrintPlmnId PrintAsciiString

#define FreePlmnId FreeAsciiString 




typedef FileSequenceNumber RapFileSequenceNumber; /* [APPLICATION 181] IMPLICIT FileSequenceNumber */

#define BEncRapFileSequenceNumberContent BEncFileSequenceNumberContent

#define BDecRapFileSequenceNumberContent BDecFileSequenceNumberContent

#define PrintRapFileSequenceNumber PrintFileSequenceNumber

#define FreeRapFileSequenceNumber FreeFileSequenceNumber 




typedef Code RecEntityCode; /* [APPLICATION 184] IMPLICIT Code */

#define BEncRecEntityCodeContent BEncCodeContent

#define BDecRecEntityCodeContent BDecCodeContent

#define PrintRecEntityCode PrintCode

#define FreeRecEntityCode FreeCode 




typedef AsnList RecEntityCodeList; /* [APPLICATION 185] IMPLICIT SEQUENCE OF RecEntityCode */

AsnLen BEncRecEntityCodeListContent PROTO ((BUF_TYPE b, RecEntityCodeList *v));

void BDecRecEntityCodeListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, RecEntityCodeList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintRecEntityCodeList PROTO ((FILE* f, RecEntityCodeList *v, unsigned short int indent));
void FreeRecEntityCodeList PROTO ((RecEntityCodeList *v));





typedef AsciiString RecEntityId; /* [APPLICATION 400] IMPLICIT AsciiString */

#define BEncRecEntityIdContent BEncAsciiStringContent

#define BDecRecEntityIdContent BDecAsciiStringContent

#define PrintRecEntityId PrintAsciiString

#define FreeRecEntityId FreeAsciiString 




typedef struct RecEntityInformation /* [APPLICATION 183] IMPLICIT SEQUENCE */
{
    RecEntityCode* recEntityCode; /* RecEntityCode OPTIONAL */
    RecEntityType* recEntityType; /* RecEntityType OPTIONAL */
    RecEntityId recEntityId; /* RecEntityId OPTIONAL */
} RecEntityInformation;

AsnLen BEncRecEntityInformationContent PROTO ((BUF_TYPE b, RecEntityInformation *v));

void BDecRecEntityInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, RecEntityInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintRecEntityInformation PROTO ((FILE* f, RecEntityInformation *v, unsigned short int indent));
void FreeRecEntityInformation PROTO ((RecEntityInformation *v));





typedef PlmnId Recipient; /* [APPLICATION 182] IMPLICIT PlmnId */

#define BEncRecipientContent BEncPlmnIdContent

#define BDecRecipientContent BDecPlmnIdContent

#define PrintRecipient PrintPlmnId

#define FreeRecipient FreePlmnId 




typedef struct ScuChargeType /* [APPLICATION 192] IMPLICIT SEQUENCE */
{
    MessageStatus* messageStatus; /* MessageStatus OPTIONAL */
    PriorityCode* priorityCode; /* PriorityCode OPTIONAL */
    DistanceChargeBandCode distanceChargeBandCode; /* DistanceChargeBandCode OPTIONAL */
    MessageType* messageType; /* MessageType OPTIONAL */
    MessageDescriptionCode* messageDescriptionCode; /* MessageDescriptionCode OPTIONAL */
} ScuChargeType;

AsnLen BEncScuChargeTypeContent PROTO ((BUF_TYPE b, ScuChargeType *v));

void BDecScuChargeTypeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ScuChargeType *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintScuChargeType PROTO ((FILE* f, ScuChargeType *v, unsigned short int indent));
void FreeScuChargeType PROTO ((ScuChargeType *v));





typedef PlmnId Sender; /* [APPLICATION 196] IMPLICIT PlmnId */

#define BEncSenderContent BEncPlmnIdContent

#define BDecSenderContent BDecPlmnIdContent

#define PrintSender PrintPlmnId

#define FreeSender FreePlmnId 




typedef LocationDescription ServingLocationDescription; /* [APPLICATION 414] IMPLICIT LocationDescription */

#define BEncServingLocationDescriptionContent BEncLocationDescriptionContent

#define BDecServingLocationDescriptionContent BDecLocationDescriptionContent

#define PrintServingLocationDescription PrintLocationDescription

#define FreeServingLocationDescription FreeLocationDescription 




typedef AsciiString ServingNetwork; /* [APPLICATION 195] IMPLICIT AsciiString */

#define BEncServingNetworkContent BEncAsciiStringContent

#define BDecServingNetworkContent BDecAsciiStringContent

#define PrintServingNetwork PrintAsciiString

#define FreeServingNetwork FreeAsciiString 




typedef struct SimChargeableSubscriber /* [APPLICATION 199] IMPLICIT SEQUENCE */
{
    Imsi imsi; /* Imsi OPTIONAL */
    Msisdn msisdn; /* Msisdn OPTIONAL */
} SimChargeableSubscriber;

AsnLen BEncSimChargeableSubscriberContent PROTO ((BUF_TYPE b, SimChargeableSubscriber *v));

void BDecSimChargeableSubscriberContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SimChargeableSubscriber *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintSimChargeableSubscriber PROTO ((FILE* f, SimChargeableSubscriber *v, unsigned short int indent));
void FreeSimChargeableSubscriber PROTO ((SimChargeableSubscriber *v));





typedef AsciiString SimToolkitIndicator; /* [APPLICATION 200] IMPLICIT AsciiString */

#define BEncSimToolkitIndicatorContent BEncAsciiStringContent

#define BDecSimToolkitIndicatorContent BDecAsciiStringContent

#define PrintSimToolkitIndicator PrintAsciiString

#define FreeSimToolkitIndicator FreeAsciiString 




typedef AsciiString SMSDestinationNumber; /* [APPLICATION 419] IMPLICIT AsciiString */

#define BEncSMSDestinationNumberContent BEncAsciiStringContent

#define BDecSMSDestinationNumberContent BDecAsciiStringContent

#define PrintSMSDestinationNumber PrintAsciiString

#define FreeSMSDestinationNumber FreeAsciiString 




typedef AsciiString SMSOriginator; /* [APPLICATION 425] IMPLICIT AsciiString */

#define BEncSMSOriginatorContent BEncAsciiStringContent

#define BDecSMSOriginatorContent BDecAsciiStringContent

#define PrintSMSOriginator PrintAsciiString

#define FreeSMSOriginator FreeAsciiString 




typedef AsciiString SsParameters; /* [APPLICATION 204] IMPLICIT AsciiString */

#define BEncSsParametersContent BEncAsciiStringContent

#define BDecSsParametersContent BDecAsciiStringContent

#define PrintSsParameters PrintAsciiString

#define FreeSsParameters FreeAsciiString 




typedef HexString SupplServiceCode; /* [APPLICATION 209] IMPLICIT HexString */

#define BEncSupplServiceCodeContent BEncHexStringContent

#define BDecSupplServiceCodeContent BDecHexStringContent

#define PrintSupplServiceCode PrintHexString

#define FreeSupplServiceCode FreeHexString 




typedef Currency TapCurrency; /* [APPLICATION 210] IMPLICIT Currency */

#define BEncTapCurrencyContent BEncCurrencyContent

#define BDecTapCurrencyContent BDecCurrencyContent

#define PrintTapCurrency PrintCurrency

#define FreeTapCurrency FreeCurrency 




typedef AbsoluteAmount TaxableAmount; /* [APPLICATION 398] IMPLICIT AbsoluteAmount */

#define BEncTaxableAmountContent BEncAbsoluteAmountContent

#define BDecTaxableAmountContent BDecAbsoluteAmountContent

#define PrintTaxableAmount PrintAbsoluteAmount

#define FreeTaxableAmount FreeAbsoluteAmount 




typedef AsciiString TaxIndicator; /* [APPLICATION 432] IMPLICIT AsciiString */

#define BEncTaxIndicatorContent BEncAsciiStringContent

#define BDecTaxIndicatorContent BDecAsciiStringContent

#define PrintTaxIndicator PrintAsciiString

#define FreeTaxIndicator FreeAsciiString 




typedef NumberString TaxRate; /* [APPLICATION 215] IMPLICIT NumberString (SIZE (7)) */

#define BEncTaxRateContent BEncNumberStringContent

#define BDecTaxRateContent BDecNumberStringContent

#define PrintTaxRate PrintNumberString

#define FreeTaxRate FreeNumberString 




typedef AsciiString TaxType; /* [APPLICATION 217] IMPLICIT AsciiString */

#define BEncTaxTypeContent BEncAsciiStringContent

#define BDecTaxTypeContent BDecAsciiStringContent

#define PrintTaxType PrintAsciiString

#define FreeTaxType FreeAsciiString 




typedef AbsoluteAmount TaxValue; /* [APPLICATION 397] IMPLICIT AbsoluteAmount */

#define BEncTaxValueContent BEncAbsoluteAmountContent

#define BDecTaxValueContent BDecAbsoluteAmountContent

#define PrintTaxValue PrintAbsoluteAmount

#define FreeTaxValue FreeAbsoluteAmount 




typedef HexString TeleServiceCode; /* [APPLICATION 218] IMPLICIT HexString */

#define BEncTeleServiceCodeContent BEncHexStringContent

#define BDecTeleServiceCodeContent BDecHexStringContent

#define PrintTeleServiceCode PrintHexString

#define FreeTeleServiceCode FreeHexString 




typedef AddressStringDigits ThirdPartyNumber; /* [APPLICATION 403] IMPLICIT AddressStringDigits */

#define BEncThirdPartyNumberContent BEncAddressStringDigitsContent

#define BDecThirdPartyNumberContent BDecAddressStringDigitsContent

#define PrintThirdPartyNumber PrintAddressStringDigits

#define FreeThirdPartyNumber FreeAddressStringDigits 




typedef struct ThreeGcamelDestination /* [APPLICATION 431] CHOICE */
{
    enum ThreeGcamelDestinationChoiceId
    {
        THREEGCAMELDESTINATION_CAMELDESTINATIONNUMBER,
        THREEGCAMELDESTINATION_GPRSDESTINATION
    } choiceId;
    union ThreeGcamelDestinationChoiceUnion
    {
    CamelDestinationNumber* camelDestinationNumber; /* CamelDestinationNumber */
    struct GprsDestination* gprsDestination; /* GprsDestination */
    } a;
} ThreeGcamelDestination;

AsnLen BEncThreeGcamelDestinationContent PROTO ((BUF_TYPE b, ThreeGcamelDestination *v));

void BDecThreeGcamelDestinationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ThreeGcamelDestination *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintThreeGcamelDestination PROTO ((FILE* f, ThreeGcamelDestination *v, unsigned short int indent));
void FreeThreeGcamelDestination PROTO ((ThreeGcamelDestination *v));





typedef AbsoluteAmount TotalAdvisedCharge; /* [APPLICATION 356] IMPLICIT AbsoluteAmount */

#define BEncTotalAdvisedChargeContent BEncAbsoluteAmountContent

#define BDecTotalAdvisedChargeContent BDecAbsoluteAmountContent

#define PrintTotalAdvisedCharge PrintAbsoluteAmount

#define FreeTotalAdvisedCharge FreeAbsoluteAmount 




typedef AbsoluteAmount TotalAdvisedChargeRefund; /* [APPLICATION 357] IMPLICIT AbsoluteAmount */

#define BEncTotalAdvisedChargeRefundContent BEncAbsoluteAmountContent

#define BDecTotalAdvisedChargeRefundContent BDecAbsoluteAmountContent

#define PrintTotalAdvisedChargeRefund PrintAbsoluteAmount

#define FreeTotalAdvisedChargeRefund FreeAbsoluteAmount 




typedef AbsoluteAmount TotalCharge; /* [APPLICATION 415] IMPLICIT AbsoluteAmount */

#define BEncTotalChargeContent BEncAbsoluteAmountContent

#define BDecTotalChargeContent BDecAbsoluteAmountContent

#define PrintTotalCharge PrintAbsoluteAmount

#define FreeTotalCharge FreeAbsoluteAmount 




typedef AbsoluteAmount TotalChargeRefund; /* [APPLICATION 355] IMPLICIT AbsoluteAmount */

#define BEncTotalChargeRefundContent BEncAbsoluteAmountContent

#define BDecTotalChargeRefundContent BDecAbsoluteAmountContent

#define PrintTotalChargeRefund PrintAbsoluteAmount

#define FreeTotalChargeRefund FreeAbsoluteAmount 




typedef AbsoluteAmount TotalCommission; /* [APPLICATION 358] IMPLICIT AbsoluteAmount */

#define BEncTotalCommissionContent BEncAbsoluteAmountContent

#define BDecTotalCommissionContent BDecAbsoluteAmountContent

#define PrintTotalCommission PrintAbsoluteAmount

#define FreeTotalCommission FreeAbsoluteAmount 




typedef AbsoluteAmount TotalCommissionRefund; /* [APPLICATION 359] IMPLICIT AbsoluteAmount */

#define BEncTotalCommissionRefundContent BEncAbsoluteAmountContent

#define BDecTotalCommissionRefundContent BDecAbsoluteAmountContent

#define PrintTotalCommissionRefund PrintAbsoluteAmount

#define FreeTotalCommissionRefund FreeAbsoluteAmount 




typedef DataVolume TotalDataVolume; /* [APPLICATION 343] IMPLICIT DataVolume */

#define BEncTotalDataVolumeContent BEncDataVolumeContent

#define BDecTotalDataVolumeContent BDecDataVolumeContent

#define PrintTotalDataVolume PrintDataVolume

#define FreeTotalDataVolume FreeDataVolume 




typedef AbsoluteAmount TotalDiscountRefund; /* [APPLICATION 354] IMPLICIT AbsoluteAmount */

#define BEncTotalDiscountRefundContent BEncAbsoluteAmountContent

#define BDecTotalDiscountRefundContent BDecAbsoluteAmountContent

#define PrintTotalDiscountRefund PrintAbsoluteAmount

#define FreeTotalDiscountRefund FreeAbsoluteAmount 




typedef AbsoluteAmount TotalDiscountValue; /* [APPLICATION 225] IMPLICIT AbsoluteAmount */

#define BEncTotalDiscountValueContent BEncAbsoluteAmountContent

#define BDecTotalDiscountValueContent BDecAbsoluteAmountContent

#define PrintTotalDiscountValue PrintAbsoluteAmount

#define FreeTotalDiscountValue FreeAbsoluteAmount 




typedef AbsoluteAmount TotalTaxRefund; /* [APPLICATION 353] IMPLICIT AbsoluteAmount */

#define BEncTotalTaxRefundContent BEncAbsoluteAmountContent

#define BDecTotalTaxRefundContent BDecAbsoluteAmountContent

#define PrintTotalTaxRefund PrintAbsoluteAmount

#define FreeTotalTaxRefund FreeAbsoluteAmount 




typedef AbsoluteAmount TotalTaxValue; /* [APPLICATION 226] IMPLICIT AbsoluteAmount */

#define BEncTotalTaxValueContent BEncAbsoluteAmountContent

#define BDecTotalTaxValueContent BDecAbsoluteAmountContent

#define PrintTotalTaxValue PrintAbsoluteAmount

#define FreeTotalTaxValue FreeAbsoluteAmount 




typedef TotalCallEventDuration TotalTransactionDuration; /* [APPLICATION 416] IMPLICIT TotalCallEventDuration */

#define BEncTotalTransactionDurationContent BEncTotalCallEventDurationContent

#define BDecTotalTransactionDurationContent BDecTotalCallEventDurationContent

#define PrintTotalTransactionDuration PrintTotalCallEventDuration

#define FreeTotalTransactionDuration FreeTotalCallEventDuration 




typedef struct TrackedCustomerEquipment /* [APPLICATION 381] IMPLICIT SEQUENCE */
{
    EquipmentIdType* equipmentIdType; /* EquipmentIdType OPTIONAL */
    EquipmentId equipmentId; /* EquipmentId OPTIONAL */
} TrackedCustomerEquipment;

AsnLen BEncTrackedCustomerEquipmentContent PROTO ((BUF_TYPE b, TrackedCustomerEquipment *v));

void BDecTrackedCustomerEquipmentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackedCustomerEquipment *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackedCustomerEquipment PROTO ((FILE* f, TrackedCustomerEquipment *v, unsigned short int indent));
void FreeTrackedCustomerEquipment PROTO ((TrackedCustomerEquipment *v));





typedef struct TrackedCustomerHomeId /* [APPLICATION 377] IMPLICIT SEQUENCE */
{
    HomeIdType* homeIdType; /* HomeIdType OPTIONAL */
    HomeIdentifier homeIdentifier; /* HomeIdentifier OPTIONAL */
} TrackedCustomerHomeId;

AsnLen BEncTrackedCustomerHomeIdContent PROTO ((BUF_TYPE b, TrackedCustomerHomeId *v));

void BDecTrackedCustomerHomeIdContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackedCustomerHomeId *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackedCustomerHomeId PROTO ((FILE* f, TrackedCustomerHomeId *v, unsigned short int indent));
void FreeTrackedCustomerHomeId PROTO ((TrackedCustomerHomeId *v));





typedef AsnList TrackedCustomerHomeIdList; /* [APPLICATION 376] IMPLICIT SEQUENCE OF TrackedCustomerHomeId */

AsnLen BEncTrackedCustomerHomeIdListContent PROTO ((BUF_TYPE b, TrackedCustomerHomeIdList *v));

void BDecTrackedCustomerHomeIdListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackedCustomerHomeIdList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackedCustomerHomeIdList PROTO ((FILE* f, TrackedCustomerHomeIdList *v, unsigned short int indent));
void FreeTrackedCustomerHomeIdList PROTO ((TrackedCustomerHomeIdList *v));





typedef struct TrackedCustomerIdentification /* [APPLICATION 372] IMPLICIT SEQUENCE */
{
    CustomerIdType* customerIdType; /* CustomerIdType OPTIONAL */
    CustomerIdentifier customerIdentifier; /* CustomerIdentifier OPTIONAL */
} TrackedCustomerIdentification;

AsnLen BEncTrackedCustomerIdentificationContent PROTO ((BUF_TYPE b, TrackedCustomerIdentification *v));

void BDecTrackedCustomerIdentificationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackedCustomerIdentification *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackedCustomerIdentification PROTO ((FILE* f, TrackedCustomerIdentification *v, unsigned short int indent));
void FreeTrackedCustomerIdentification PROTO ((TrackedCustomerIdentification *v));





typedef AsnList TrackedCustomerIdList; /* [APPLICATION 370] IMPLICIT SEQUENCE OF TrackedCustomerIdentification */

AsnLen BEncTrackedCustomerIdListContent PROTO ((BUF_TYPE b, TrackedCustomerIdList *v));

void BDecTrackedCustomerIdListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackedCustomerIdList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackedCustomerIdList PROTO ((FILE* f, TrackedCustomerIdList *v, unsigned short int indent));
void FreeTrackedCustomerIdList PROTO ((TrackedCustomerIdList *v));





typedef struct TrackedCustomerLocation /* [APPLICATION 380] IMPLICIT SEQUENCE */
{
    LocationIdType* locationIdType; /* LocationIdType OPTIONAL */
    LocationIdentifier locationIdentifier; /* LocationIdentifier OPTIONAL */
} TrackedCustomerLocation;

AsnLen BEncTrackedCustomerLocationContent PROTO ((BUF_TYPE b, TrackedCustomerLocation *v));

void BDecTrackedCustomerLocationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackedCustomerLocation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackedCustomerLocation PROTO ((FILE* f, TrackedCustomerLocation *v, unsigned short int indent));
void FreeTrackedCustomerLocation PROTO ((TrackedCustomerLocation *v));





typedef AsnList TrackedCustomerLocList; /* [APPLICATION 379] IMPLICIT SEQUENCE OF TrackedCustomerLocation */

AsnLen BEncTrackedCustomerLocListContent PROTO ((BUF_TYPE b, TrackedCustomerLocList *v));

void BDecTrackedCustomerLocListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackedCustomerLocList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackedCustomerLocList PROTO ((FILE* f, TrackedCustomerLocList *v, unsigned short int indent));
void FreeTrackedCustomerLocList PROTO ((TrackedCustomerLocList *v));





typedef struct TrackingCustomerEquipment /* [APPLICATION 371] IMPLICIT SEQUENCE */
{
    EquipmentIdType* equipmentIdType; /* EquipmentIdType OPTIONAL */
    EquipmentId equipmentId; /* EquipmentId OPTIONAL */
} TrackingCustomerEquipment;

AsnLen BEncTrackingCustomerEquipmentContent PROTO ((BUF_TYPE b, TrackingCustomerEquipment *v));

void BDecTrackingCustomerEquipmentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackingCustomerEquipment *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackingCustomerEquipment PROTO ((FILE* f, TrackingCustomerEquipment *v, unsigned short int indent));
void FreeTrackingCustomerEquipment PROTO ((TrackingCustomerEquipment *v));





typedef struct TrackingCustomerHomeId /* [APPLICATION 366] IMPLICIT SEQUENCE */
{
    HomeIdType* homeIdType; /* HomeIdType OPTIONAL */
    HomeIdentifier homeIdentifier; /* HomeIdentifier OPTIONAL */
} TrackingCustomerHomeId;

AsnLen BEncTrackingCustomerHomeIdContent PROTO ((BUF_TYPE b, TrackingCustomerHomeId *v));

void BDecTrackingCustomerHomeIdContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackingCustomerHomeId *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackingCustomerHomeId PROTO ((FILE* f, TrackingCustomerHomeId *v, unsigned short int indent));
void FreeTrackingCustomerHomeId PROTO ((TrackingCustomerHomeId *v));





typedef AsnList TrackingCustomerHomeIdList; /* [APPLICATION 365] IMPLICIT SEQUENCE OF TrackingCustomerHomeId */

AsnLen BEncTrackingCustomerHomeIdListContent PROTO ((BUF_TYPE b, TrackingCustomerHomeIdList *v));

void BDecTrackingCustomerHomeIdListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackingCustomerHomeIdList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackingCustomerHomeIdList PROTO ((FILE* f, TrackingCustomerHomeIdList *v, unsigned short int indent));
void FreeTrackingCustomerHomeIdList PROTO ((TrackingCustomerHomeIdList *v));





typedef struct TrackingCustomerIdentification /* [APPLICATION 362] IMPLICIT SEQUENCE */
{
    CustomerIdType* customerIdType; /* CustomerIdType OPTIONAL */
    CustomerIdentifier customerIdentifier; /* CustomerIdentifier OPTIONAL */
} TrackingCustomerIdentification;

AsnLen BEncTrackingCustomerIdentificationContent PROTO ((BUF_TYPE b, TrackingCustomerIdentification *v));

void BDecTrackingCustomerIdentificationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackingCustomerIdentification *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackingCustomerIdentification PROTO ((FILE* f, TrackingCustomerIdentification *v, unsigned short int indent));
void FreeTrackingCustomerIdentification PROTO ((TrackingCustomerIdentification *v));





typedef AsnList TrackingCustomerIdList; /* [APPLICATION 299] IMPLICIT SEQUENCE OF TrackingCustomerIdentification */

AsnLen BEncTrackingCustomerIdListContent PROTO ((BUF_TYPE b, TrackingCustomerIdList *v));

void BDecTrackingCustomerIdListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackingCustomerIdList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackingCustomerIdList PROTO ((FILE* f, TrackingCustomerIdList *v, unsigned short int indent));
void FreeTrackingCustomerIdList PROTO ((TrackingCustomerIdList *v));





typedef struct TrackingCustomerLocation /* [APPLICATION 369] IMPLICIT SEQUENCE */
{
    LocationIdType* locationIdType; /* LocationIdType OPTIONAL */
    LocationIdentifier locationIdentifier; /* LocationIdentifier OPTIONAL */
} TrackingCustomerLocation;

AsnLen BEncTrackingCustomerLocationContent PROTO ((BUF_TYPE b, TrackingCustomerLocation *v));

void BDecTrackingCustomerLocationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackingCustomerLocation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackingCustomerLocation PROTO ((FILE* f, TrackingCustomerLocation *v, unsigned short int indent));
void FreeTrackingCustomerLocation PROTO ((TrackingCustomerLocation *v));





typedef AsnList TrackingCustomerLocList; /* [APPLICATION 368] IMPLICIT SEQUENCE OF TrackingCustomerLocation */

AsnLen BEncTrackingCustomerLocListContent PROTO ((BUF_TYPE b, TrackingCustomerLocList *v));

void BDecTrackingCustomerLocListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackingCustomerLocList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackingCustomerLocList PROTO ((FILE* f, TrackingCustomerLocList *v, unsigned short int indent));
void FreeTrackingCustomerLocList PROTO ((TrackingCustomerLocList *v));





typedef AsciiString TransactionAuthCode; /* [APPLICATION 342] IMPLICIT AsciiString */

#define BEncTransactionAuthCodeContent BEncAsciiStringContent

#define BDecTransactionAuthCodeContent BDecAsciiStringContent

#define PrintTransactionAuthCode PrintAsciiString

#define FreeTransactionAuthCode FreeAsciiString 




typedef AsciiString TransactionDetailDescription; /* [APPLICATION 339] IMPLICIT AsciiString */

#define BEncTransactionDetailDescriptionContent BEncAsciiStringContent

#define BDecTransactionDetailDescriptionContent BDecAsciiStringContent

#define PrintTransactionDetailDescription PrintAsciiString

#define FreeTransactionDetailDescription FreeAsciiString 




typedef AsciiString TransactionIdentifier; /* [APPLICATION 341] IMPLICIT AsciiString */

#define BEncTransactionIdentifierContent BEncAsciiStringContent

#define BDecTransactionIdentifierContent BDecAsciiStringContent

#define PrintTransactionIdentifier PrintAsciiString

#define FreeTransactionIdentifier FreeAsciiString 




typedef AsciiString TransactionShortDescription; /* [APPLICATION 340] IMPLICIT AsciiString */

#define BEncTransactionShortDescriptionContent BEncAsciiStringContent

#define BDecTransactionShortDescriptionContent BDecAsciiStringContent

#define PrintTransactionShortDescription PrintAsciiString

#define FreeTransactionShortDescription FreeAsciiString 




typedef AsciiString UtcTimeOffset; /* [APPLICATION 231] IMPLICIT AsciiString */

#define BEncUtcTimeOffsetContent BEncAsciiStringContent

#define BDecUtcTimeOffsetContent BDecAsciiStringContent

#define PrintUtcTimeOffset PrintAsciiString

#define FreeUtcTimeOffset FreeAsciiString 




typedef Code UtcTimeOffsetCode; /* [APPLICATION 232] IMPLICIT Code */

#define BEncUtcTimeOffsetCodeContent BEncCodeContent

#define BDecUtcTimeOffsetCodeContent BDecCodeContent

#define PrintUtcTimeOffsetCode PrintCode

#define FreeUtcTimeOffsetCode FreeCode 




typedef struct UtcTimeOffsetInfo /* [APPLICATION 233] IMPLICIT SEQUENCE */
{
    UtcTimeOffsetCode* utcTimeOffsetCode; /* UtcTimeOffsetCode OPTIONAL */
    UtcTimeOffset utcTimeOffset; /* UtcTimeOffset OPTIONAL */
} UtcTimeOffsetInfo;

AsnLen BEncUtcTimeOffsetInfoContent PROTO ((BUF_TYPE b, UtcTimeOffsetInfo *v));

void BDecUtcTimeOffsetInfoContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, UtcTimeOffsetInfo *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintUtcTimeOffsetInfo PROTO ((FILE* f, UtcTimeOffsetInfo *v, unsigned short int indent));
void FreeUtcTimeOffsetInfo PROTO ((UtcTimeOffsetInfo *v));





typedef AsnList UtcTimeOffsetInfoList; /* [APPLICATION 234] IMPLICIT SEQUENCE OF UtcTimeOffsetInfo */

AsnLen BEncUtcTimeOffsetInfoListContent PROTO ((BUF_TYPE b, UtcTimeOffsetInfoList *v));

void BDecUtcTimeOffsetInfoListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, UtcTimeOffsetInfoList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintUtcTimeOffsetInfoList PROTO ((FILE* f, UtcTimeOffsetInfoList *v, unsigned short int indent));
void FreeUtcTimeOffsetInfoList PROTO ((UtcTimeOffsetInfoList *v));





typedef AsciiString Bid; /* AsciiString */

#define BEncBidContent BEncAsciiStringContent

#define BDecBidContent BDecAsciiStringContent

#define PrintBid PrintAsciiString

#define FreeBid FreeAsciiString 




typedef AsnList MessageDescriptionInfoList; /* [APPLICATION 8] IMPLICIT SEQUENCE OF MessageDescriptionInformation */

AsnLen BEncMessageDescriptionInfoListContent PROTO ((BUF_TYPE b, MessageDescriptionInfoList *v));

void BDecMessageDescriptionInfoListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MessageDescriptionInfoList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMessageDescriptionInfoList PROTO ((FILE* f, MessageDescriptionInfoList *v, unsigned short int indent));
void FreeMessageDescriptionInfoList PROTO ((MessageDescriptionInfoList *v));





typedef Charge AdvisedCharge; /* [APPLICATION 349] IMPLICIT Charge */

#define BEncAdvisedChargeContent BEncChargeContent

#define BDecAdvisedChargeContent BDecChargeContent

#define PrintAdvisedCharge PrintCharge

#define FreeAdvisedCharge FreeCharge 




typedef struct AdvisedChargeInformation /* [APPLICATION 351] IMPLICIT SEQUENCE */
{
    PaidIndicator* paidIndicator; /* PaidIndicator OPTIONAL */
    PaymentMethod* paymentMethod; /* PaymentMethod OPTIONAL */
    AdvisedChargeCurrency advisedChargeCurrency; /* AdvisedChargeCurrency OPTIONAL */
    AdvisedCharge* advisedCharge; /* AdvisedCharge OPTIONAL */
    Commission* commission; /* Commission OPTIONAL */
} AdvisedChargeInformation;

AsnLen BEncAdvisedChargeInformationContent PROTO ((BUF_TYPE b, AdvisedChargeInformation *v));

void BDecAdvisedChargeInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, AdvisedChargeInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintAdvisedChargeInformation PROTO ((FILE* f, AdvisedChargeInformation *v, unsigned short int indent));
void FreeAdvisedChargeInformation PROTO ((AdvisedChargeInformation *v));





typedef struct BasicServiceCode /* [APPLICATION 426] CHOICE */
{
    enum BasicServiceCodeChoiceId
    {
        BASICSERVICECODE_TELESERVICECODE,
        BASICSERVICECODE_BEARERSERVICECODE
    } choiceId;
    union BasicServiceCodeChoiceUnion
    {
    TeleServiceCode* teleServiceCode; /* TeleServiceCode */
    BearerServiceCode* bearerServiceCode; /* BearerServiceCode */
    } a;
} BasicServiceCode;

AsnLen BEncBasicServiceCodeContent PROTO ((BUF_TYPE b, BasicServiceCode *v));

void BDecBasicServiceCodeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, BasicServiceCode *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintBasicServiceCode PROTO ((FILE* f, BasicServiceCode *v, unsigned short int indent));
void FreeBasicServiceCode PROTO ((BasicServiceCode *v));





typedef AsnList BasicServiceCodeList; /* [APPLICATION 37] IMPLICIT SEQUENCE OF BasicServiceCode */

AsnLen BEncBasicServiceCodeListContent PROTO ((BUF_TYPE b, BasicServiceCodeList *v));

void BDecBasicServiceCodeListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, BasicServiceCodeList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintBasicServiceCodeList PROTO ((FILE* f, BasicServiceCodeList *v, unsigned short int indent));
void FreeBasicServiceCodeList PROTO ((BasicServiceCodeList *v));





typedef struct CallOriginator /* [APPLICATION 41] IMPLICIT SEQUENCE */
{
    CallingNumber callingNumber; /* CallingNumber OPTIONAL */
    ClirIndicator* clirIndicator; /* ClirIndicator OPTIONAL */
    SMSOriginator sMSOriginator; /* SMSOriginator OPTIONAL */
} CallOriginator;

AsnLen BEncCallOriginatorContent PROTO ((BUF_TYPE b, CallOriginator *v));

void BDecCallOriginatorContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CallOriginator *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintCallOriginator PROTO ((FILE* f, CallOriginator *v, unsigned short int indent));
void FreeCallOriginator PROTO ((CallOriginator *v));





typedef struct ChargeableSubscriber /* [APPLICATION 427] CHOICE */
{
    enum ChargeableSubscriberChoiceId
    {
        CHARGEABLESUBSCRIBER_SIMCHARGEABLESUBSCRIBER,
        CHARGEABLESUBSCRIBER_MINCHARGEABLESUBSCRIBER
    } choiceId;
    union ChargeableSubscriberChoiceUnion
    {
    struct SimChargeableSubscriber* simChargeableSubscriber; /* SimChargeableSubscriber */
    struct MinChargeableSubscriber* minChargeableSubscriber; /* MinChargeableSubscriber */
    } a;
} ChargeableSubscriber;

AsnLen BEncChargeableSubscriberContent PROTO ((BUF_TYPE b, ChargeableSubscriber *v));

void BDecChargeableSubscriberContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargeableSubscriber *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargeableSubscriber PROTO ((FILE* f, ChargeableSubscriber *v, unsigned short int indent));
void FreeChargeableSubscriber PROTO ((ChargeableSubscriber *v));





typedef struct ChargedPartyEquipment /* [APPLICATION 323] IMPLICIT SEQUENCE */
{
    EquipmentIdType* equipmentIdType; /* EquipmentIdType OPTIONAL */
    EquipmentId equipmentId; /* EquipmentId OPTIONAL */
} ChargedPartyEquipment;

AsnLen BEncChargedPartyEquipmentContent PROTO ((BUF_TYPE b, ChargedPartyEquipment *v));

void BDecChargedPartyEquipmentContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargedPartyEquipment *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargedPartyEquipment PROTO ((FILE* f, ChargedPartyEquipment *v, unsigned short int indent));
void FreeChargedPartyEquipment PROTO ((ChargedPartyEquipment *v));





typedef struct ChargedPartyHomeIdentification /* [APPLICATION 313] IMPLICIT SEQUENCE */
{
    HomeIdType* homeIdType; /* HomeIdType OPTIONAL */
    HomeIdentifier homeIdentifier; /* HomeIdentifier OPTIONAL */
} ChargedPartyHomeIdentification;

AsnLen BEncChargedPartyHomeIdentificationContent PROTO ((BUF_TYPE b, ChargedPartyHomeIdentification *v));

void BDecChargedPartyHomeIdentificationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargedPartyHomeIdentification *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargedPartyHomeIdentification PROTO ((FILE* f, ChargedPartyHomeIdentification *v, unsigned short int indent));
void FreeChargedPartyHomeIdentification PROTO ((ChargedPartyHomeIdentification *v));





typedef AsnList ChargedPartyHomeIdList; /* [APPLICATION 314] IMPLICIT SEQUENCE OF ChargedPartyHomeIdentification */

AsnLen BEncChargedPartyHomeIdListContent PROTO ((BUF_TYPE b, ChargedPartyHomeIdList *v));

void BDecChargedPartyHomeIdListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargedPartyHomeIdList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargedPartyHomeIdList PROTO ((FILE* f, ChargedPartyHomeIdList *v, unsigned short int indent));
void FreeChargedPartyHomeIdList PROTO ((ChargedPartyHomeIdList *v));





typedef struct ChargedPartyIdentification /* [APPLICATION 309] IMPLICIT SEQUENCE */
{
    ChargedPartyIdType* chargedPartyIdType; /* ChargedPartyIdType OPTIONAL */
    ChargedPartyIdentifier chargedPartyIdentifier; /* ChargedPartyIdentifier OPTIONAL */
} ChargedPartyIdentification;

AsnLen BEncChargedPartyIdentificationContent PROTO ((BUF_TYPE b, ChargedPartyIdentification *v));

void BDecChargedPartyIdentificationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargedPartyIdentification *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargedPartyIdentification PROTO ((FILE* f, ChargedPartyIdentification *v, unsigned short int indent));
void FreeChargedPartyIdentification PROTO ((ChargedPartyIdentification *v));





typedef AsnList ChargedPartyIdList; /* [APPLICATION 310] IMPLICIT SEQUENCE OF ChargedPartyIdentification */

AsnLen BEncChargedPartyIdListContent PROTO ((BUF_TYPE b, ChargedPartyIdList *v));

void BDecChargedPartyIdListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargedPartyIdList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargedPartyIdList PROTO ((FILE* f, ChargedPartyIdList *v, unsigned short int indent));
void FreeChargedPartyIdList PROTO ((ChargedPartyIdList *v));





typedef struct ChargedPartyLocation /* [APPLICATION 320] IMPLICIT SEQUENCE */
{
    LocationIdType* locationIdType; /* LocationIdType OPTIONAL */
    LocationIdentifier locationIdentifier; /* LocationIdentifier OPTIONAL */
} ChargedPartyLocation;

AsnLen BEncChargedPartyLocationContent PROTO ((BUF_TYPE b, ChargedPartyLocation *v));

void BDecChargedPartyLocationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargedPartyLocation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargedPartyLocation PROTO ((FILE* f, ChargedPartyLocation *v, unsigned short int indent));
void FreeChargedPartyLocation PROTO ((ChargedPartyLocation *v));





typedef AsnList ChargedPartyLocationList; /* [APPLICATION 321] IMPLICIT SEQUENCE OF ChargedPartyLocation */

AsnLen BEncChargedPartyLocationListContent PROTO ((BUF_TYPE b, ChargedPartyLocationList *v));

void BDecChargedPartyLocationListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargedPartyLocationList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargedPartyLocationList PROTO ((FILE* f, ChargedPartyLocationList *v, unsigned short int indent));
void FreeChargedPartyLocationList PROTO ((ChargedPartyLocationList *v));





typedef struct ContentProvider /* [APPLICATION 327] IMPLICIT SEQUENCE */
{
    ContentProviderIdType* contentProviderIdType; /* ContentProviderIdType OPTIONAL */
    ContentProviderIdentifier contentProviderIdentifier; /* ContentProviderIdentifier OPTIONAL */
} ContentProvider;

AsnLen BEncContentProviderContent PROTO ((BUF_TYPE b, ContentProvider *v));

void BDecContentProviderContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ContentProvider *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintContentProvider PROTO ((FILE* f, ContentProvider *v, unsigned short int indent));
void FreeContentProvider PROTO ((ContentProvider *v));





typedef AsnList ContentProviderIdList; /* [APPLICATION 328] IMPLICIT SEQUENCE OF ContentProvider */

AsnLen BEncContentProviderIdListContent PROTO ((BUF_TYPE b, ContentProviderIdList *v));

void BDecContentProviderIdListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ContentProviderIdList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintContentProviderIdList PROTO ((FILE* f, ContentProviderIdList *v, unsigned short int indent));
void FreeContentProviderIdList PROTO ((ContentProviderIdList *v));





typedef struct CurrencyConversion /* [APPLICATION 106] IMPLICIT SEQUENCE */
{
    ExchangeRateCode* exchangeRateCode; /* ExchangeRateCode OPTIONAL */
    NumberOfDecimalPlaces* numberOfDecimalPlaces; /* NumberOfDecimalPlaces OPTIONAL */
    ExchangeRate* exchangeRate; /* ExchangeRate OPTIONAL */
} CurrencyConversion;

AsnLen BEncCurrencyConversionContent PROTO ((BUF_TYPE b, CurrencyConversion *v));

void BDecCurrencyConversionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CurrencyConversion *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintCurrencyConversion PROTO ((FILE* f, CurrencyConversion *v, unsigned short int indent));
void FreeCurrencyConversion PROTO ((CurrencyConversion *v));





typedef AsnList CurrencyConversionList; /* [APPLICATION 80] IMPLICIT SEQUENCE OF CurrencyConversion */

AsnLen BEncCurrencyConversionListContent PROTO ((BUF_TYPE b, CurrencyConversionList *v));

void BDecCurrencyConversionListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CurrencyConversionList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintCurrencyConversionList PROTO ((FILE* f, CurrencyConversionList *v, unsigned short int indent));
void FreeCurrencyConversionList PROTO ((CurrencyConversionList *v));





typedef struct DateTime /* SEQUENCE */
{
    LocalTimeStamp localTimeStamp; /* LocalTimeStamp OPTIONAL */
    UtcTimeOffsetCode* utcTimeOffsetCode; /* UtcTimeOffsetCode OPTIONAL */
} DateTime;

AsnLen BEncDateTimeContent PROTO ((BUF_TYPE b, DateTime *v));

void BDecDateTimeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DateTime *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintDateTime PROTO ((FILE* f, DateTime *v, unsigned short int indent));
void FreeDateTime PROTO ((DateTime *v));





typedef struct DateTimeLong /* SEQUENCE */
{
    LocalTimeStamp localTimeStamp; /* LocalTimeStamp OPTIONAL */
    UtcTimeOffset utcTimeOffset; /* UtcTimeOffset OPTIONAL */
} DateTimeLong;

AsnLen BEncDateTimeLongContent PROTO ((BUF_TYPE b, DateTimeLong *v));

void BDecDateTimeLongContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DateTimeLong *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintDateTimeLong PROTO ((FILE* f, DateTimeLong *v, unsigned short int indent));
void FreeDateTimeLong PROTO ((DateTimeLong *v));





typedef struct DateTime DepositTimeStamp; /* [APPLICATION 88] IMPLICIT DateTime */

#define BEncDepositTimeStampContent BEncDateTimeContent

#define BDecDepositTimeStampContent BDecDateTimeContent

#define PrintDepositTimeStamp PrintDateTime

#define FreeDepositTimeStamp FreeDateTime 




typedef struct Destination /* [APPLICATION 89] IMPLICIT SEQUENCE */
{
    CalledNumber calledNumber; /* CalledNumber OPTIONAL */
    DialledDigits dialledDigits; /* DialledDigits OPTIONAL */
    CalledPlace calledPlace; /* CalledPlace OPTIONAL */
    CalledRegion calledRegion; /* CalledRegion OPTIONAL */
    SMSDestinationNumber sMSDestinationNumber; /* SMSDestinationNumber OPTIONAL */
} Destination;

AsnLen BEncDestinationContent PROTO ((BUF_TYPE b, Destination *v));

void BDecDestinationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Destination *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintDestination PROTO ((FILE* f, Destination *v, unsigned short int indent));
void FreeDestination PROTO ((Destination *v));





typedef NetworkId DestinationNetwork; /* [APPLICATION 90] IMPLICIT NetworkId */

#define BEncDestinationNetworkContent BEncNetworkIdContent

#define BDecDestinationNetworkContent BDecNetworkIdContent

#define PrintDestinationNetwork PrintNetworkId

#define FreeDestinationNetwork FreeNetworkId 




typedef DiscountValue Discount; /* [APPLICATION 412] IMPLICIT DiscountValue */

#define BEncDiscountContent BEncDiscountValueContent

#define BDecDiscountContent BDecDiscountValueContent

#define PrintDiscount PrintDiscountValue

#define FreeDiscount FreeDiscountValue 




typedef struct DiscountApplied /* [APPLICATION 428] CHOICE */
{
    enum DiscountAppliedChoiceId
    {
        DISCOUNTAPPLIED_FIXEDDISCOUNTVALUE,
        DISCOUNTAPPLIED_DISCOUNTRATE
    } choiceId;
    union DiscountAppliedChoiceUnion
    {
    FixedDiscountValue fixedDiscountValue; /* FixedDiscountValue */
    DiscountRate discountRate; /* DiscountRate */
    } a;
} DiscountApplied;

AsnLen BEncDiscountAppliedContent PROTO ((BUF_TYPE b, DiscountApplied *v));

void BDecDiscountAppliedContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DiscountApplied *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintDiscountApplied PROTO ((FILE* f, DiscountApplied *v, unsigned short int indent));
void FreeDiscountApplied PROTO ((DiscountApplied *v));





typedef struct DiscountInformation /* [APPLICATION 96] IMPLICIT SEQUENCE */
{
    DiscountCode* discountCode; /* DiscountCode OPTIONAL */
    Discount* discount; /* Discount OPTIONAL */
    DiscountableAmount* discountableAmount; /* DiscountableAmount OPTIONAL */
} DiscountInformation;

AsnLen BEncDiscountInformationContent PROTO ((BUF_TYPE b, DiscountInformation *v));

void BDecDiscountInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DiscountInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintDiscountInformation PROTO ((FILE* f, DiscountInformation *v, unsigned short int indent));
void FreeDiscountInformation PROTO ((DiscountInformation *v));





typedef struct Discounting /* [APPLICATION 94] IMPLICIT SEQUENCE */
{
    DiscountCode* discountCode; /* DiscountCode OPTIONAL */
    struct DiscountApplied* discountApplied; /* DiscountApplied OPTIONAL */
} Discounting;

AsnLen BEncDiscountingContent PROTO ((BUF_TYPE b, Discounting *v));

void BDecDiscountingContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Discounting *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintDiscounting PROTO ((FILE* f, Discounting *v, unsigned short int indent));
void FreeDiscounting PROTO ((Discounting *v));





typedef AsnList DiscountingList; /* [APPLICATION 95] IMPLICIT SEQUENCE OF Discounting */

AsnLen BEncDiscountingListContent PROTO ((BUF_TYPE b, DiscountingList *v));

void BDecDiscountingListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DiscountingList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintDiscountingList PROTO ((FILE* f, DiscountingList *v, unsigned short int indent));
void FreeDiscountingList PROTO ((DiscountingList *v));





typedef struct DateTimeLong EarliestCallTimeStamp; /* [APPLICATION 101] IMPLICIT DateTimeLong */

#define BEncEarliestCallTimeStampContent BEncDateTimeLongContent

#define BDecEarliestCallTimeStampContent BDecDateTimeLongContent

#define PrintEarliestCallTimeStamp PrintDateTimeLong

#define FreeEarliestCallTimeStamp FreeDateTimeLong 




typedef struct DateTimeLong FileAvailableTimeStamp; /* [APPLICATION 107] IMPLICIT DateTimeLong */

#define BEncFileAvailableTimeStampContent BEncDateTimeLongContent

#define BDecFileAvailableTimeStampContent BDecDateTimeLongContent

#define PrintFileAvailableTimeStamp PrintDateTimeLong

#define FreeFileAvailableTimeStamp FreeDateTimeLong 




typedef struct DateTimeLong FileCreationTimeStamp; /* [APPLICATION 108] IMPLICIT DateTimeLong */

#define BEncFileCreationTimeStampContent BEncDateTimeLongContent

#define BDecFileCreationTimeStampContent BDecDateTimeLongContent

#define PrintFileCreationTimeStamp PrintDateTimeLong

#define FreeFileCreationTimeStamp FreeDateTimeLong 




typedef struct GprsChargeableSubscriber /* [APPLICATION 115] IMPLICIT SEQUENCE */
{
    struct ChargeableSubscriber* chargeableSubscriber; /* ChargeableSubscriber OPTIONAL */
    PdpAddress pdpAddress; /* PdpAddress OPTIONAL */
    NetworkAccessIdentifier networkAccessIdentifier; /* NetworkAccessIdentifier OPTIONAL */
} GprsChargeableSubscriber;

AsnLen BEncGprsChargeableSubscriberContent PROTO ((BUF_TYPE b, GprsChargeableSubscriber *v));

void BDecGprsChargeableSubscriberContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GprsChargeableSubscriber *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintGprsChargeableSubscriber PROTO ((FILE* f, GprsChargeableSubscriber *v, unsigned short int indent));
void FreeGprsChargeableSubscriber PROTO ((GprsChargeableSubscriber *v));





typedef struct GprsNetworkLocation /* [APPLICATION 118] IMPLICIT SEQUENCE */
{
    RecEntityCodeList* recEntity; /* RecEntityCodeList OPTIONAL */
    LocationArea* locationArea; /* LocationArea OPTIONAL */
    CellId* cellId; /* CellId OPTIONAL */
} GprsNetworkLocation;

AsnLen BEncGprsNetworkLocationContent PROTO ((BUF_TYPE b, GprsNetworkLocation *v));

void BDecGprsNetworkLocationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GprsNetworkLocation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintGprsNetworkLocation PROTO ((FILE* f, GprsNetworkLocation *v, unsigned short int indent));
void FreeGprsNetworkLocation PROTO ((GprsNetworkLocation *v));





typedef struct GsmChargeableSubscriber /* [APPLICATION 286] IMPLICIT SEQUENCE */
{
    Imsi imsi; /* Imsi OPTIONAL */
    Msisdn msisdn; /* Msisdn OPTIONAL */
} GsmChargeableSubscriber;

AsnLen BEncGsmChargeableSubscriberContent PROTO ((BUF_TYPE b, GsmChargeableSubscriber *v));

void BDecGsmChargeableSubscriberContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GsmChargeableSubscriber *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintGsmChargeableSubscriber PROTO ((FILE* f, GsmChargeableSubscriber *v, unsigned short int indent));
void FreeGsmChargeableSubscriber PROTO ((GsmChargeableSubscriber *v));





typedef Bid HomeBid; /* [APPLICATION 122] IMPLICIT Bid */

#define BEncHomeBidContent BEncBidContent

#define BDecHomeBidContent BDecBidContent

#define PrintHomeBid PrintBid

#define FreeHomeBid FreeBid 




typedef LocationDescription HomeLocationDescription; /* [APPLICATION 413] IMPLICIT LocationDescription */

#define BEncHomeLocationDescriptionContent BEncLocationDescriptionContent

#define BDecHomeLocationDescriptionContent BDecLocationDescriptionContent

#define PrintHomeLocationDescription PrintLocationDescription

#define FreeHomeLocationDescription FreeLocationDescription 




typedef struct HomeLocationInformation /* [APPLICATION 123] IMPLICIT SEQUENCE */
{
    HomeBid homeBid; /* HomeBid OPTIONAL */
    HomeLocationDescription homeLocationDescription; /* HomeLocationDescription OPTIONAL */
} HomeLocationInformation;

AsnLen BEncHomeLocationInformationContent PROTO ((BUF_TYPE b, HomeLocationInformation *v));

void BDecHomeLocationInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, HomeLocationInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintHomeLocationInformation PROTO ((FILE* f, HomeLocationInformation *v, unsigned short int indent));
void FreeHomeLocationInformation PROTO ((HomeLocationInformation *v));





typedef struct InternetServiceProvider /* [APPLICATION 329] IMPLICIT SEQUENCE */
{
    IspIdType* ispIdType; /* IspIdType OPTIONAL */
    IspIdentifier ispIdentifier; /* IspIdentifier OPTIONAL */
} InternetServiceProvider;

AsnLen BEncInternetServiceProviderContent PROTO ((BUF_TYPE b, InternetServiceProvider *v));

void BDecInternetServiceProviderContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, InternetServiceProvider *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintInternetServiceProvider PROTO ((FILE* f, InternetServiceProvider *v, unsigned short int indent));
void FreeInternetServiceProvider PROTO ((InternetServiceProvider *v));





typedef AsnList InternetServiceProviderIdList; /* [APPLICATION 330] IMPLICIT SEQUENCE OF InternetServiceProvider */

AsnLen BEncInternetServiceProviderIdListContent PROTO ((BUF_TYPE b, InternetServiceProviderIdList *v));

void BDecInternetServiceProviderIdListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, InternetServiceProviderIdList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintInternetServiceProviderIdList PROTO ((FILE* f, InternetServiceProviderIdList *v, unsigned short int indent));
void FreeInternetServiceProviderIdList PROTO ((InternetServiceProviderIdList *v));





typedef AsnList ISPList; /* [APPLICATION 378] IMPLICIT SEQUENCE OF InternetServiceProvider */

AsnLen BEncISPListContent PROTO ((BUF_TYPE b, ISPList *v));

void BDecISPListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ISPList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintISPList PROTO ((FILE* f, ISPList *v, unsigned short int indent));
void FreeISPList PROTO ((ISPList *v));





typedef struct DateTimeLong LatestCallTimeStamp; /* [APPLICATION 133] IMPLICIT DateTimeLong */

#define BEncLatestCallTimeStampContent BEncDateTimeLongContent

#define BDecLatestCallTimeStampContent BDecDateTimeLongContent

#define PrintLatestCallTimeStamp PrintDateTimeLong

#define FreeLatestCallTimeStamp FreeDateTimeLong 




typedef struct DateTime LCSRequestTimestamp; /* [APPLICATION 384] IMPLICIT DateTime */

#define BEncLCSRequestTimestampContent BEncDateTimeContent

#define BDecLCSRequestTimestampContent BDecDateTimeContent

#define PrintLCSRequestTimestamp PrintDateTime

#define FreeLCSRequestTimestamp FreeDateTime 




typedef struct LCSSPInformation /* [APPLICATION 373] IMPLICIT SEQUENCE */
{
    LCSSPIdentificationList* lCSSPIdentificationList; /* LCSSPIdentificationList OPTIONAL */
    ISPList* iSPList; /* ISPList OPTIONAL */
    NetworkList* networkList; /* NetworkList OPTIONAL */
} LCSSPInformation;

AsnLen BEncLCSSPInformationContent PROTO ((BUF_TYPE b, LCSSPInformation *v));

void BDecLCSSPInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LCSSPInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintLCSSPInformation PROTO ((FILE* f, LCSSPInformation *v, unsigned short int indent));
void FreeLCSSPInformation PROTO ((LCSSPInformation *v));





typedef struct NetworkLocation /* [APPLICATION 156] IMPLICIT SEQUENCE */
{
    RecEntityCode* recEntityCode; /* RecEntityCode OPTIONAL */
    CallReference callReference; /* CallReference OPTIONAL */
    LocationArea* locationArea; /* LocationArea OPTIONAL */
    CellId* cellId; /* CellId OPTIONAL */
} NetworkLocation;

AsnLen BEncNetworkLocationContent PROTO ((BUF_TYPE b, NetworkLocation *v));

void BDecNetworkLocationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NetworkLocation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintNetworkLocation PROTO ((FILE* f, NetworkLocation *v, unsigned short int indent));
void FreeNetworkLocation PROTO ((NetworkLocation *v));





typedef AsnList OperatorSpecInfoList; /* [APPLICATION 162] IMPLICIT SEQUENCE OF OperatorSpecInformation */

AsnLen BEncOperatorSpecInfoListContent PROTO ((BUF_TYPE b, OperatorSpecInfoList *v));

void BDecOperatorSpecInfoListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, OperatorSpecInfoList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintOperatorSpecInfoList PROTO ((FILE* f, OperatorSpecInfoList *v, unsigned short int indent));
void FreeOperatorSpecInfoList PROTO ((OperatorSpecInfoList *v));





typedef struct DateTime OrderPlacedTimeStamp; /* [APPLICATION 300] IMPLICIT DateTime */

#define BEncOrderPlacedTimeStampContent BEncDateTimeContent

#define BDecOrderPlacedTimeStampContent BDecDateTimeContent

#define PrintOrderPlacedTimeStamp PrintDateTime

#define FreeOrderPlacedTimeStamp FreeDateTime 




typedef struct DateTime PDPContextStartTimestamp; /* [APPLICATION 260] IMPLICIT DateTime */

#define BEncPDPContextStartTimestampContent BEncDateTimeContent

#define BDecPDPContextStartTimestampContent BDecDateTimeContent

#define PrintPDPContextStartTimestamp PrintDateTime

#define FreePDPContextStartTimestamp FreeDateTime 




typedef AsnList RecEntityInfoList; /* [APPLICATION 188] IMPLICIT SEQUENCE OF RecEntityInformation */

AsnLen BEncRecEntityInfoListContent PROTO ((BUF_TYPE b, RecEntityInfoList *v));

void BDecRecEntityInfoListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, RecEntityInfoList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintRecEntityInfoList PROTO ((FILE* f, RecEntityInfoList *v, unsigned short int indent));
void FreeRecEntityInfoList PROTO ((RecEntityInfoList *v));





typedef struct DateTime RequestedDeliveryTimeStamp; /* [APPLICATION 301] IMPLICIT DateTime */

#define BEncRequestedDeliveryTimeStampContent BEncDateTimeContent

#define BDecRequestedDeliveryTimeStampContent BDecDateTimeContent

#define PrintRequestedDeliveryTimeStamp PrintDateTime

#define FreeRequestedDeliveryTimeStamp FreeDateTime 




typedef struct ScuChargeableSubscriber /* [APPLICATION 430] CHOICE */
{
    enum ScuChargeableSubscriberChoiceId
    {
        SCUCHARGEABLESUBSCRIBER_GSMCHARGEABLESUBSCRIBER,
        SCUCHARGEABLESUBSCRIBER_MINCHARGEABLESUBSCRIBER
    } choiceId;
    union ScuChargeableSubscriberChoiceUnion
    {
    struct GsmChargeableSubscriber* gsmChargeableSubscriber; /* GsmChargeableSubscriber */
    struct MinChargeableSubscriber* minChargeableSubscriber; /* MinChargeableSubscriber */
    } a;
} ScuChargeableSubscriber;

AsnLen BEncScuChargeableSubscriberContent PROTO ((BUF_TYPE b, ScuChargeableSubscriber *v));

void BDecScuChargeableSubscriberContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ScuChargeableSubscriber *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintScuChargeableSubscriber PROTO ((FILE* f, ScuChargeableSubscriber *v, unsigned short int indent));
void FreeScuChargeableSubscriber PROTO ((ScuChargeableSubscriber *v));





typedef Bid ServingBid; /* [APPLICATION 198] IMPLICIT Bid */

#define BEncServingBidContent BEncBidContent

#define BDecServingBidContent BDecBidContent

#define PrintServingBid PrintBid

#define FreeServingBid FreeBid 




typedef struct ServingPartiesInformation /* [APPLICATION 335] IMPLICIT SEQUENCE */
{
    ContentProviderName contentProviderName; /* ContentProviderName OPTIONAL */
    ContentProviderIdList* contentProviderIdList; /* ContentProviderIdList OPTIONAL */
    InternetServiceProviderIdList* internetServiceProviderIdList; /* InternetServiceProviderIdList OPTIONAL */
    NetworkList* networkList; /* NetworkList OPTIONAL */
} ServingPartiesInformation;

AsnLen BEncServingPartiesInformationContent PROTO ((BUF_TYPE b, ServingPartiesInformation *v));

void BDecServingPartiesInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ServingPartiesInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintServingPartiesInformation PROTO ((FILE* f, ServingPartiesInformation *v, unsigned short int indent));
void FreeServingPartiesInformation PROTO ((ServingPartiesInformation *v));





typedef struct Taxation /* [APPLICATION 216] IMPLICIT SEQUENCE */
{
    TaxCode* taxCode; /* TaxCode OPTIONAL */
    TaxType taxType; /* TaxType OPTIONAL */
    TaxRate taxRate; /* TaxRate OPTIONAL */
    ChargeType chargeType; /* ChargeType OPTIONAL */
    TaxIndicator taxIndicator; /* TaxIndicator OPTIONAL */
} Taxation;

AsnLen BEncTaxationContent PROTO ((BUF_TYPE b, Taxation *v));

void BDecTaxationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Taxation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTaxation PROTO ((FILE* f, Taxation *v, unsigned short int indent));
void FreeTaxation PROTO ((Taxation *v));





typedef AsnList TaxationList; /* [APPLICATION 211] IMPLICIT SEQUENCE OF Taxation */

AsnLen BEncTaxationListContent PROTO ((BUF_TYPE b, TaxationList *v));

void BDecTaxationListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TaxationList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTaxationList PROTO ((FILE* f, TaxationList *v, unsigned short int indent));
void FreeTaxationList PROTO ((TaxationList *v));





typedef struct TaxInformation /* [APPLICATION 213] IMPLICIT SEQUENCE */
{
    TaxCode* taxCode; /* TaxCode OPTIONAL */
    TaxValue* taxValue; /* TaxValue OPTIONAL */
    TaxableAmount* taxableAmount; /* TaxableAmount OPTIONAL */
} TaxInformation;

AsnLen BEncTaxInformationContent PROTO ((BUF_TYPE b, TaxInformation *v));

void BDecTaxInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TaxInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTaxInformation PROTO ((FILE* f, TaxInformation *v, unsigned short int indent));
void FreeTaxInformation PROTO ((TaxInformation *v));





typedef AsnList TaxInformationList; /* [APPLICATION 214] IMPLICIT SEQUENCE OF TaxInformation */

AsnLen BEncTaxInformationListContent PROTO ((BUF_TYPE b, TaxInformationList *v));

void BDecTaxInformationListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TaxInformationList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTaxInformationList PROTO ((FILE* f, TaxInformationList *v, unsigned short int indent));
void FreeTaxInformationList PROTO ((TaxInformationList *v));





typedef struct ThirdPartyInformation /* [APPLICATION 219] IMPLICIT SEQUENCE */
{
    ThirdPartyNumber thirdPartyNumber; /* ThirdPartyNumber OPTIONAL */
    ClirIndicator* clirIndicator; /* ClirIndicator OPTIONAL */
} ThirdPartyInformation;

AsnLen BEncThirdPartyInformationContent PROTO ((BUF_TYPE b, ThirdPartyInformation *v));

void BDecThirdPartyInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ThirdPartyInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintThirdPartyInformation PROTO ((FILE* f, ThirdPartyInformation *v, unsigned short int indent));
void FreeThirdPartyInformation PROTO ((ThirdPartyInformation *v));





typedef struct TotalAdvisedChargeValue /* [APPLICATION 360] IMPLICIT SEQUENCE */
{
    AdvisedChargeCurrency advisedChargeCurrency; /* AdvisedChargeCurrency OPTIONAL */
    TotalAdvisedCharge* totalAdvisedCharge; /* TotalAdvisedCharge OPTIONAL */
    TotalAdvisedChargeRefund* totalAdvisedChargeRefund; /* TotalAdvisedChargeRefund OPTIONAL */
    TotalCommission* totalCommission; /* TotalCommission OPTIONAL */
    TotalCommissionRefund* totalCommissionRefund; /* TotalCommissionRefund OPTIONAL */
} TotalAdvisedChargeValue;

AsnLen BEncTotalAdvisedChargeValueContent PROTO ((BUF_TYPE b, TotalAdvisedChargeValue *v));

void BDecTotalAdvisedChargeValueContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TotalAdvisedChargeValue *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTotalAdvisedChargeValue PROTO ((FILE* f, TotalAdvisedChargeValue *v, unsigned short int indent));
void FreeTotalAdvisedChargeValue PROTO ((TotalAdvisedChargeValue *v));





typedef AsnList TotalAdvisedChargeValueList; /* [APPLICATION 361] IMPLICIT SEQUENCE OF TotalAdvisedChargeValue */

AsnLen BEncTotalAdvisedChargeValueListContent PROTO ((BUF_TYPE b, TotalAdvisedChargeValueList *v));

void BDecTotalAdvisedChargeValueListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TotalAdvisedChargeValueList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTotalAdvisedChargeValueList PROTO ((FILE* f, TotalAdvisedChargeValueList *v, unsigned short int indent));
void FreeTotalAdvisedChargeValueList PROTO ((TotalAdvisedChargeValueList *v));





typedef struct TrackedCustomerInformation /* [APPLICATION 367] IMPLICIT SEQUENCE */
{
    TrackedCustomerIdList* trackedCustomerIdList; /* TrackedCustomerIdList OPTIONAL */
    TrackedCustomerHomeIdList* trackedCustomerHomeIdList; /* TrackedCustomerHomeIdList OPTIONAL */
    TrackedCustomerLocList* trackedCustomerLocList; /* TrackedCustomerLocList OPTIONAL */
    struct TrackedCustomerEquipment* trackedCustomerEquipment; /* TrackedCustomerEquipment OPTIONAL */
} TrackedCustomerInformation;

AsnLen BEncTrackedCustomerInformationContent PROTO ((BUF_TYPE b, TrackedCustomerInformation *v));

void BDecTrackedCustomerInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackedCustomerInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackedCustomerInformation PROTO ((FILE* f, TrackedCustomerInformation *v, unsigned short int indent));
void FreeTrackedCustomerInformation PROTO ((TrackedCustomerInformation *v));





typedef struct TrackingCustomerInformation /* [APPLICATION 298] IMPLICIT SEQUENCE */
{
    TrackingCustomerIdList* trackingCustomerIdList; /* TrackingCustomerIdList OPTIONAL */
    TrackingCustomerHomeIdList* trackingCustomerHomeIdList; /* TrackingCustomerHomeIdList OPTIONAL */
    TrackingCustomerLocList* trackingCustomerLocList; /* TrackingCustomerLocList OPTIONAL */
    struct TrackingCustomerEquipment* trackingCustomerEquipment; /* TrackingCustomerEquipment OPTIONAL */
} TrackingCustomerInformation;

AsnLen BEncTrackingCustomerInformationContent PROTO ((BUF_TYPE b, TrackingCustomerInformation *v));

void BDecTrackingCustomerInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TrackingCustomerInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTrackingCustomerInformation PROTO ((FILE* f, TrackingCustomerInformation *v, unsigned short int indent));
void FreeTrackingCustomerInformation PROTO ((TrackingCustomerInformation *v));





typedef struct DateTimeLong TransferCutOffTimeStamp; /* [APPLICATION 227] IMPLICIT DateTimeLong */

#define BEncTransferCutOffTimeStampContent BEncDateTimeLongContent

#define BDecTransferCutOffTimeStampContent BDecDateTimeLongContent

#define PrintTransferCutOffTimeStamp PrintDateTimeLong

#define FreeTransferCutOffTimeStamp FreeDateTimeLong 




typedef struct Notification /* [APPLICATION 2] IMPLICIT SEQUENCE */
{
    Sender sender; /* Sender OPTIONAL */
    Recipient recipient; /* Recipient OPTIONAL */
    FileSequenceNumber fileSequenceNumber; /* FileSequenceNumber OPTIONAL */
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber OPTIONAL */
    FileCreationTimeStamp* fileCreationTimeStamp; /* FileCreationTimeStamp OPTIONAL */
    FileAvailableTimeStamp* fileAvailableTimeStamp; /* FileAvailableTimeStamp OPTIONAL */
    TransferCutOffTimeStamp* transferCutOffTimeStamp; /* TransferCutOffTimeStamp OPTIONAL */
    SpecificationVersionNumber* specificationVersionNumber; /* SpecificationVersionNumber OPTIONAL */
    ReleaseVersionNumber* releaseVersionNumber; /* ReleaseVersionNumber OPTIONAL */
    FileTypeIndicator fileTypeIndicator; /* FileTypeIndicator OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} Notification;

AsnLen BEncNotificationContent PROTO ((BUF_TYPE b, Notification *v));

void BDecNotificationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, Notification *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintNotification PROTO ((FILE* f, Notification *v, unsigned short int indent));
void FreeNotification PROTO ((Notification *v));





typedef struct BatchControlInfo /* [APPLICATION 4] IMPLICIT SEQUENCE */
{
    Sender sender; /* Sender OPTIONAL */
    Recipient recipient; /* Recipient OPTIONAL */
    FileSequenceNumber fileSequenceNumber; /* FileSequenceNumber OPTIONAL */
    FileCreationTimeStamp* fileCreationTimeStamp; /* FileCreationTimeStamp OPTIONAL */
    TransferCutOffTimeStamp* transferCutOffTimeStamp; /* TransferCutOffTimeStamp OPTIONAL */
    FileAvailableTimeStamp* fileAvailableTimeStamp; /* FileAvailableTimeStamp OPTIONAL */
    SpecificationVersionNumber* specificationVersionNumber; /* SpecificationVersionNumber OPTIONAL */
    ReleaseVersionNumber* releaseVersionNumber; /* ReleaseVersionNumber OPTIONAL */
    FileTypeIndicator fileTypeIndicator; /* FileTypeIndicator OPTIONAL */
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} BatchControlInfo;

AsnLen BEncBatchControlInfoContent PROTO ((BUF_TYPE b, BatchControlInfo *v));

void BDecBatchControlInfoContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, BatchControlInfo *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintBatchControlInfo PROTO ((FILE* f, BatchControlInfo *v, unsigned short int indent));
void FreeBatchControlInfo PROTO ((BatchControlInfo *v));





typedef struct AccountingInfo /* [APPLICATION 5] IMPLICIT SEQUENCE */
{
    TaxationList* taxation; /* TaxationList OPTIONAL */
    DiscountingList* discounting; /* DiscountingList OPTIONAL */
    LocalCurrency localCurrency; /* LocalCurrency OPTIONAL */
    TapCurrency tapCurrency; /* TapCurrency OPTIONAL */
    CurrencyConversionList* currencyConversionInfo; /* CurrencyConversionList OPTIONAL */
    TapDecimalPlaces* tapDecimalPlaces; /* TapDecimalPlaces OPTIONAL */
} AccountingInfo;

AsnLen BEncAccountingInfoContent PROTO ((BUF_TYPE b, AccountingInfo *v));

void BDecAccountingInfoContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, AccountingInfo *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintAccountingInfo PROTO ((FILE* f, AccountingInfo *v, unsigned short int indent));
void FreeAccountingInfo PROTO ((AccountingInfo *v));





typedef struct NetworkInfo /* [APPLICATION 6] IMPLICIT SEQUENCE */
{
    UtcTimeOffsetInfoList* utcTimeOffsetInfo; /* UtcTimeOffsetInfoList OPTIONAL */
    RecEntityInfoList* recEntityInfo; /* RecEntityInfoList OPTIONAL */
} NetworkInfo;

AsnLen BEncNetworkInfoContent PROTO ((BUF_TYPE b, NetworkInfo *v));

void BDecNetworkInfoContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, NetworkInfo *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintNetworkInfo PROTO ((FILE* f, NetworkInfo *v, unsigned short int indent));
void FreeNetworkInfo PROTO ((NetworkInfo *v));





typedef struct AuditControlInfo /* [APPLICATION 15] IMPLICIT SEQUENCE */
{
    EarliestCallTimeStamp* earliestCallTimeStamp; /* EarliestCallTimeStamp OPTIONAL */
    LatestCallTimeStamp* latestCallTimeStamp; /* LatestCallTimeStamp OPTIONAL */
    TotalCharge* totalCharge; /* TotalCharge OPTIONAL */
    TotalChargeRefund* totalChargeRefund; /* TotalChargeRefund OPTIONAL */
    TotalTaxRefund* totalTaxRefund; /* TotalTaxRefund OPTIONAL */
    TotalTaxValue* totalTaxValue; /* TotalTaxValue OPTIONAL */
    TotalDiscountValue* totalDiscountValue; /* TotalDiscountValue OPTIONAL */
    TotalDiscountRefund* totalDiscountRefund; /* TotalDiscountRefund OPTIONAL */
    TotalAdvisedChargeValueList* totalAdvisedChargeValueList; /* TotalAdvisedChargeValueList OPTIONAL */
    CallEventDetailsCount* callEventDetailsCount; /* CallEventDetailsCount OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} AuditControlInfo;

AsnLen BEncAuditControlInfoContent PROTO ((BUF_TYPE b, AuditControlInfo *v));

void BDecAuditControlInfoContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, AuditControlInfo *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintAuditControlInfo PROTO ((FILE* f, AuditControlInfo *v, unsigned short int indent));
void FreeAuditControlInfo PROTO ((AuditControlInfo *v));





typedef struct DateTime ActualDeliveryTimeStamp; /* [APPLICATION 302] IMPLICIT DateTime */

#define BEncActualDeliveryTimeStampContent BEncDateTimeContent

#define BDecActualDeliveryTimeStampContent BDecDateTimeContent

#define PrintActualDeliveryTimeStamp PrintDateTime

#define FreeActualDeliveryTimeStamp FreeDateTime 




typedef struct BasicService /* [APPLICATION 36] IMPLICIT SEQUENCE */
{
    struct BasicServiceCode* serviceCode; /* BasicServiceCode OPTIONAL */
    TransparencyIndicator* transparencyIndicator; /* TransparencyIndicator OPTIONAL */
    Fnur* fnur; /* Fnur OPTIONAL */
    UserProtocolIndicator* userProtocolIndicator; /* UserProtocolIndicator OPTIONAL */
    GuaranteedBitRate guaranteedBitRate; /* GuaranteedBitRate OPTIONAL */
    MaximumBitRate maximumBitRate; /* MaximumBitRate OPTIONAL */
} BasicService;

AsnLen BEncBasicServiceContent PROTO ((BUF_TYPE b, BasicService *v));

void BDecBasicServiceContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, BasicService *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintBasicService PROTO ((FILE* f, BasicService *v, unsigned short int indent));
void FreeBasicService PROTO ((BasicService *v));





typedef struct DateTime CallEventStartTimeStamp; /* [APPLICATION 44] IMPLICIT DateTime */

#define BEncCallEventStartTimeStampContent BEncDateTimeContent

#define BDecCallEventStartTimeStampContent BDecDateTimeContent

#define PrintCallEventStartTimeStamp PrintDateTime

#define FreeCallEventStartTimeStamp FreeDateTime 




typedef struct CamelServiceUsed /* [APPLICATION 57] IMPLICIT SEQUENCE */
{
    CamelServiceLevel* camelServiceLevel; /* CamelServiceLevel OPTIONAL */
    CamelServiceKey* camelServiceKey; /* CamelServiceKey OPTIONAL */
    DefaultCallHandlingIndicator* defaultCallHandling; /* DefaultCallHandlingIndicator OPTIONAL */
    ExchangeRateCode* exchangeRateCode; /* ExchangeRateCode OPTIONAL */
    TaxInformationList* taxInformation; /* TaxInformationList OPTIONAL */
    struct DiscountInformation* discountInformation; /* DiscountInformation OPTIONAL */
    CamelInvocationFee* camelInvocationFee; /* CamelInvocationFee OPTIONAL */
    struct ThreeGcamelDestination* threeGcamelDestination; /* ThreeGcamelDestination OPTIONAL */
    CseInformation cseInformation; /* CseInformation OPTIONAL */
} CamelServiceUsed;

AsnLen BEncCamelServiceUsedContent PROTO ((BUF_TYPE b, CamelServiceUsed *v));

void BDecCamelServiceUsedContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CamelServiceUsed *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintCamelServiceUsed PROTO ((FILE* f, CamelServiceUsed *v, unsigned short int indent));
void FreeCamelServiceUsed PROTO ((CamelServiceUsed *v));





typedef struct ChargedPartyInformation /* [APPLICATION 324] IMPLICIT SEQUENCE */
{
    ChargedPartyIdList* chargedPartyIdList; /* ChargedPartyIdList OPTIONAL */
    ChargedPartyHomeIdList* chargedPartyHomeIdList; /* ChargedPartyHomeIdList OPTIONAL */
    ChargedPartyLocationList* chargedPartyLocationList; /* ChargedPartyLocationList OPTIONAL */
    struct ChargedPartyEquipment* chargedPartyEquipment; /* ChargedPartyEquipment OPTIONAL */
} ChargedPartyInformation;

AsnLen BEncChargedPartyInformationContent PROTO ((BUF_TYPE b, ChargedPartyInformation *v));

void BDecChargedPartyInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargedPartyInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargedPartyInformation PROTO ((FILE* f, ChargedPartyInformation *v, unsigned short int indent));
void FreeChargedPartyInformation PROTO ((ChargedPartyInformation *v));





typedef struct DateTime ChargingTimeStamp; /* [APPLICATION 74] IMPLICIT DateTime */

#define BEncChargingTimeStampContent BEncDateTimeContent

#define BDecChargingTimeStampContent BDecDateTimeContent

#define PrintChargingTimeStamp PrintDateTime

#define FreeChargingTimeStamp FreeDateTime 




typedef struct DateTime CompletionTimeStamp; /* [APPLICATION 76] IMPLICIT DateTime */

#define BEncCompletionTimeStampContent BEncDateTimeContent

#define BDecCompletionTimeStampContent BDecDateTimeContent

#define PrintCompletionTimeStamp PrintDateTime

#define FreeCompletionTimeStamp FreeDateTime 




typedef struct ContentTransactionBasicInfo /* [APPLICATION 304] IMPLICIT SEQUENCE */
{
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber OPTIONAL */
    OrderPlacedTimeStamp* orderPlacedTimeStamp; /* OrderPlacedTimeStamp OPTIONAL */
    RequestedDeliveryTimeStamp* requestedDeliveryTimeStamp; /* RequestedDeliveryTimeStamp OPTIONAL */
    ActualDeliveryTimeStamp* actualDeliveryTimeStamp; /* ActualDeliveryTimeStamp OPTIONAL */
    TotalTransactionDuration* totalTransactionDuration; /* TotalTransactionDuration OPTIONAL */
    TransactionStatus* transactionStatus; /* TransactionStatus OPTIONAL */
} ContentTransactionBasicInfo;

AsnLen BEncContentTransactionBasicInfoContent PROTO ((BUF_TYPE b, ContentTransactionBasicInfo *v));

void BDecContentTransactionBasicInfoContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ContentTransactionBasicInfo *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintContentTransactionBasicInfo PROTO ((FILE* f, ContentTransactionBasicInfo *v, unsigned short int indent));
void FreeContentTransactionBasicInfo PROTO ((ContentTransactionBasicInfo *v));





typedef struct GeographicalLocation /* [APPLICATION 113] IMPLICIT SEQUENCE */
{
    ServingNetwork servingNetwork; /* ServingNetwork OPTIONAL */
    ServingBid servingBid; /* ServingBid OPTIONAL */
    ServingLocationDescription servingLocationDescription; /* ServingLocationDescription OPTIONAL */
} GeographicalLocation;

AsnLen BEncGeographicalLocationContent PROTO ((BUF_TYPE b, GeographicalLocation *v));

void BDecGeographicalLocationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GeographicalLocation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintGeographicalLocation PROTO ((FILE* f, GeographicalLocation *v, unsigned short int indent));
void FreeGeographicalLocation PROTO ((GeographicalLocation *v));





typedef struct GprsBasicCallInformation /* [APPLICATION 114] IMPLICIT SEQUENCE */
{
    struct GprsChargeableSubscriber* gprsChargeableSubscriber; /* GprsChargeableSubscriber OPTIONAL */
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber OPTIONAL */
    struct GprsDestination* gprsDestination; /* GprsDestination OPTIONAL */
    CallEventStartTimeStamp* callEventStartTimeStamp; /* CallEventStartTimeStamp OPTIONAL */
    TotalCallEventDuration* totalCallEventDuration; /* TotalCallEventDuration OPTIONAL */
    CauseForTerm* causeForTerm; /* CauseForTerm OPTIONAL */
    PartialTypeIndicator partialTypeIndicator; /* PartialTypeIndicator OPTIONAL */
    PDPContextStartTimestamp* pDPContextStartTimestamp; /* PDPContextStartTimestamp OPTIONAL */
    NetworkInitPDPContext* networkInitPDPContext; /* NetworkInitPDPContext OPTIONAL */
    ChargingId* chargingId; /* ChargingId OPTIONAL */
} GprsBasicCallInformation;

AsnLen BEncGprsBasicCallInformationContent PROTO ((BUF_TYPE b, GprsBasicCallInformation *v));

void BDecGprsBasicCallInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GprsBasicCallInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintGprsBasicCallInformation PROTO ((FILE* f, GprsBasicCallInformation *v, unsigned short int indent));
void FreeGprsBasicCallInformation PROTO ((GprsBasicCallInformation *v));





typedef struct GprsLocationInformation /* [APPLICATION 117] IMPLICIT SEQUENCE */
{
    struct GprsNetworkLocation* gprsNetworkLocation; /* GprsNetworkLocation OPTIONAL */
    struct HomeLocationInformation* homeLocationInformation; /* HomeLocationInformation OPTIONAL */
    struct GeographicalLocation* geographicalLocation; /* GeographicalLocation OPTIONAL */
} GprsLocationInformation;

AsnLen BEncGprsLocationInformationContent PROTO ((BUF_TYPE b, GprsLocationInformation *v));

void BDecGprsLocationInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GprsLocationInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintGprsLocationInformation PROTO ((FILE* f, GprsLocationInformation *v, unsigned short int indent));
void FreeGprsLocationInformation PROTO ((GprsLocationInformation *v));





typedef struct LCSQosRequested /* [APPLICATION 383] IMPLICIT SEQUENCE */
{
    LCSRequestTimestamp* lCSRequestTimestamp; /* LCSRequestTimestamp OPTIONAL */
    HorizontalAccuracyRequested* horizontalAccuracyRequested; /* HorizontalAccuracyRequested OPTIONAL */
    VerticalAccuracyRequested* verticalAccuracyRequested; /* VerticalAccuracyRequested OPTIONAL */
    ResponseTimeCategory* responseTimeCategory; /* ResponseTimeCategory OPTIONAL */
    TrackingPeriod* trackingPeriod; /* TrackingPeriod OPTIONAL */
    TrackingFrequency* trackingFrequency; /* TrackingFrequency OPTIONAL */
} LCSQosRequested;

AsnLen BEncLCSQosRequestedContent PROTO ((BUF_TYPE b, LCSQosRequested *v));

void BDecLCSQosRequestedContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LCSQosRequested *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintLCSQosRequested PROTO ((FILE* f, LCSQosRequested *v, unsigned short int indent));
void FreeLCSQosRequested PROTO ((LCSQosRequested *v));





typedef struct LocationInformation /* [APPLICATION 138] IMPLICIT SEQUENCE */
{
    struct NetworkLocation* networkLocation; /* NetworkLocation OPTIONAL */
    struct HomeLocationInformation* homeLocationInformation; /* HomeLocationInformation OPTIONAL */
    struct GeographicalLocation* geographicalLocation; /* GeographicalLocation OPTIONAL */
} LocationInformation;

AsnLen BEncLocationInformationContent PROTO ((BUF_TYPE b, LocationInformation *v));

void BDecLocationInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LocationInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintLocationInformation PROTO ((FILE* f, LocationInformation *v, unsigned short int indent));
void FreeLocationInformation PROTO ((LocationInformation *v));





typedef struct MoBasicCallInformation /* [APPLICATION 147] IMPLICIT SEQUENCE */
{
    struct ChargeableSubscriber* chargeableSubscriber; /* ChargeableSubscriber OPTIONAL */
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber OPTIONAL */
    struct Destination* destination; /* Destination OPTIONAL */
    DestinationNetwork destinationNetwork; /* DestinationNetwork OPTIONAL */
    CallEventStartTimeStamp* callEventStartTimeStamp; /* CallEventStartTimeStamp OPTIONAL */
    TotalCallEventDuration* totalCallEventDuration; /* TotalCallEventDuration OPTIONAL */
    SimToolkitIndicator simToolkitIndicator; /* SimToolkitIndicator OPTIONAL */
    CauseForTerm* causeForTerm; /* CauseForTerm OPTIONAL */
} MoBasicCallInformation;

AsnLen BEncMoBasicCallInformationContent PROTO ((BUF_TYPE b, MoBasicCallInformation *v));

void BDecMoBasicCallInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MoBasicCallInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMoBasicCallInformation PROTO ((FILE* f, MoBasicCallInformation *v, unsigned short int indent));
void FreeMoBasicCallInformation PROTO ((MoBasicCallInformation *v));





typedef struct MtBasicCallInformation /* [APPLICATION 153] IMPLICIT SEQUENCE */
{
    struct ChargeableSubscriber* chargeableSubscriber; /* ChargeableSubscriber OPTIONAL */
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber OPTIONAL */
    struct CallOriginator* callOriginator; /* CallOriginator OPTIONAL */
    OriginatingNetwork originatingNetwork; /* OriginatingNetwork OPTIONAL */
    CallEventStartTimeStamp* callEventStartTimeStamp; /* CallEventStartTimeStamp OPTIONAL */
    TotalCallEventDuration* totalCallEventDuration; /* TotalCallEventDuration OPTIONAL */
    SimToolkitIndicator simToolkitIndicator; /* SimToolkitIndicator OPTIONAL */
    CauseForTerm* causeForTerm; /* CauseForTerm OPTIONAL */
} MtBasicCallInformation;

AsnLen BEncMtBasicCallInformationContent PROTO ((BUF_TYPE b, MtBasicCallInformation *v));

void BDecMtBasicCallInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MtBasicCallInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMtBasicCallInformation PROTO ((FILE* f, MtBasicCallInformation *v, unsigned short int indent));
void FreeMtBasicCallInformation PROTO ((MtBasicCallInformation *v));





typedef struct ScuBasicInformation /* [APPLICATION 191] IMPLICIT SEQUENCE */
{
    struct ScuChargeableSubscriber* chargeableSubscriber; /* ScuChargeableSubscriber OPTIONAL */
    ChargedPartyStatus* chargedPartyStatus; /* ChargedPartyStatus OPTIONAL */
    NonChargedNumber nonChargedNumber; /* NonChargedNumber OPTIONAL */
    ClirIndicator* clirIndicator; /* ClirIndicator OPTIONAL */
    OriginatingNetwork originatingNetwork; /* OriginatingNetwork OPTIONAL */
    DestinationNetwork destinationNetwork; /* DestinationNetwork OPTIONAL */
} ScuBasicInformation;

AsnLen BEncScuBasicInformationContent PROTO ((BUF_TYPE b, ScuBasicInformation *v));

void BDecScuBasicInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ScuBasicInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintScuBasicInformation PROTO ((FILE* f, ScuBasicInformation *v, unsigned short int indent));
void FreeScuBasicInformation PROTO ((ScuBasicInformation *v));





typedef struct ScuTimeStamps /* [APPLICATION 193] IMPLICIT SEQUENCE */
{
    DepositTimeStamp* depositTimeStamp; /* DepositTimeStamp OPTIONAL */
    CompletionTimeStamp* completionTimeStamp; /* CompletionTimeStamp OPTIONAL */
    ChargingPoint chargingPoint; /* ChargingPoint OPTIONAL */
} ScuTimeStamps;

AsnLen BEncScuTimeStampsContent PROTO ((BUF_TYPE b, ScuTimeStamps *v));

void BDecScuTimeStampsContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ScuTimeStamps *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintScuTimeStamps PROTO ((FILE* f, ScuTimeStamps *v, unsigned short int indent));
void FreeScuTimeStamps PROTO ((ScuTimeStamps *v));





typedef ChargingTimeStamp ChargeDetailTimeStamp; /* [APPLICATION 410] IMPLICIT ChargingTimeStamp */

#define BEncChargeDetailTimeStampContent BEncChargingTimeStampContent

#define BDecChargeDetailTimeStampContent BDecChargingTimeStampContent

#define PrintChargeDetailTimeStamp PrintChargingTimeStamp

#define FreeChargeDetailTimeStamp FreeChargingTimeStamp 




typedef struct ChargeDetail /* [APPLICATION 63] IMPLICIT SEQUENCE */
{
    ChargeType chargeType; /* ChargeType OPTIONAL */
    Charge* charge; /* Charge OPTIONAL */
    ChargeableUnits* chargeableUnits; /* ChargeableUnits OPTIONAL */
    ChargedUnits* chargedUnits; /* ChargedUnits OPTIONAL */
    ChargeDetailTimeStamp* chargeDetailTimeStamp; /* ChargeDetailTimeStamp OPTIONAL */
} ChargeDetail;

AsnLen BEncChargeDetailContent PROTO ((BUF_TYPE b, ChargeDetail *v));

void BDecChargeDetailContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargeDetail *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargeDetail PROTO ((FILE* f, ChargeDetail *v, unsigned short int indent));
void FreeChargeDetail PROTO ((ChargeDetail *v));





typedef AsnList ChargeDetailList; /* [APPLICATION 64] IMPLICIT SEQUENCE OF ChargeDetail */

AsnLen BEncChargeDetailListContent PROTO ((BUF_TYPE b, ChargeDetailList *v));

void BDecChargeDetailListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargeDetailList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargeDetailList PROTO ((FILE* f, ChargeDetailList *v, unsigned short int indent));
void FreeChargeDetailList PROTO ((ChargeDetailList *v));





typedef struct ChargeInformation /* [APPLICATION 69] IMPLICIT SEQUENCE */
{
    ChargedItem chargedItem; /* ChargedItem OPTIONAL */
    ExchangeRateCode* exchangeRateCode; /* ExchangeRateCode OPTIONAL */
    struct CallTypeGroup* callTypeGroup; /* CallTypeGroup OPTIONAL */
    ChargeDetailList* chargeDetailList; /* ChargeDetailList OPTIONAL */
    TaxInformationList* taxInformation; /* TaxInformationList OPTIONAL */
    struct DiscountInformation* discountInformation; /* DiscountInformation OPTIONAL */
} ChargeInformation;

AsnLen BEncChargeInformationContent PROTO ((BUF_TYPE b, ChargeInformation *v));

void BDecChargeInformationContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargeInformation *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargeInformation PROTO ((FILE* f, ChargeInformation *v, unsigned short int indent));
void FreeChargeInformation PROTO ((ChargeInformation *v));





typedef AsnList ChargeInformationList; /* [APPLICATION 70] IMPLICIT SEQUENCE OF ChargeInformation */

AsnLen BEncChargeInformationListContent PROTO ((BUF_TYPE b, ChargeInformationList *v));

void BDecChargeInformationListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ChargeInformationList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintChargeInformationList PROTO ((FILE* f, ChargeInformationList *v, unsigned short int indent));
void FreeChargeInformationList PROTO ((ChargeInformationList *v));





typedef struct ContentServiceUsed /* [APPLICATION 352] IMPLICIT SEQUENCE */
{
    ContentTransactionCode* contentTransactionCode; /* ContentTransactionCode OPTIONAL */
    ContentTransactionType* contentTransactionType; /* ContentTransactionType OPTIONAL */
    ObjectType* objectType; /* ObjectType OPTIONAL */
    TransactionDescriptionSupp* transactionDescriptionSupp; /* TransactionDescriptionSupp OPTIONAL */
    TransactionShortDescription transactionShortDescription; /* TransactionShortDescription OPTIONAL */
    TransactionDetailDescription transactionDetailDescription; /* TransactionDetailDescription OPTIONAL */
    TransactionIdentifier transactionIdentifier; /* TransactionIdentifier OPTIONAL */
    TransactionAuthCode transactionAuthCode; /* TransactionAuthCode OPTIONAL */
    DataVolumeIncoming* dataVolumeIncoming; /* DataVolumeIncoming OPTIONAL */
    DataVolumeOutgoing* dataVolumeOutgoing; /* DataVolumeOutgoing OPTIONAL */
    TotalDataVolume* totalDataVolume; /* TotalDataVolume OPTIONAL */
    ChargeRefundIndicator* chargeRefundIndicator; /* ChargeRefundIndicator OPTIONAL */
    ContentChargingPoint* contentChargingPoint; /* ContentChargingPoint OPTIONAL */
    ChargeInformationList* chargeInformationList; /* ChargeInformationList OPTIONAL */
    struct AdvisedChargeInformation* advisedChargeInformation; /* AdvisedChargeInformation OPTIONAL */
} ContentServiceUsed;

AsnLen BEncContentServiceUsedContent PROTO ((BUF_TYPE b, ContentServiceUsed *v));

void BDecContentServiceUsedContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ContentServiceUsed *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintContentServiceUsed PROTO ((FILE* f, ContentServiceUsed *v, unsigned short int indent));
void FreeContentServiceUsed PROTO ((ContentServiceUsed *v));





typedef AsnList ContentServiceUsedList; /* [APPLICATION 285] IMPLICIT SEQUENCE OF ContentServiceUsed */

AsnLen BEncContentServiceUsedListContent PROTO ((BUF_TYPE b, ContentServiceUsedList *v));

void BDecContentServiceUsedListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ContentServiceUsedList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintContentServiceUsedList PROTO ((FILE* f, ContentServiceUsedList *v, unsigned short int indent));
void FreeContentServiceUsedList PROTO ((ContentServiceUsedList *v));





typedef struct GprsServiceUsed /* [APPLICATION 121] IMPLICIT SEQUENCE */
{
    IMSSignallingContext* iMSSignallingContext; /* IMSSignallingContext OPTIONAL */
    DataVolumeIncoming* dataVolumeIncoming; /* DataVolumeIncoming OPTIONAL */
    DataVolumeOutgoing* dataVolumeOutgoing; /* DataVolumeOutgoing OPTIONAL */
    ChargeInformationList* chargeInformationList; /* ChargeInformationList OPTIONAL */
} GprsServiceUsed;

AsnLen BEncGprsServiceUsedContent PROTO ((BUF_TYPE b, GprsServiceUsed *v));

void BDecGprsServiceUsedContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GprsServiceUsed *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintGprsServiceUsed PROTO ((FILE* f, GprsServiceUsed *v, unsigned short int indent));
void FreeGprsServiceUsed PROTO ((GprsServiceUsed *v));





typedef struct LocationServiceUsage /* [APPLICATION 382] IMPLICIT SEQUENCE */
{
    struct LCSQosRequested* lCSQosRequested; /* LCSQosRequested OPTIONAL */
    struct LCSQosDelivered* lCSQosDelivered; /* LCSQosDelivered OPTIONAL */
    ChargingTimeStamp* chargingTimeStamp; /* ChargingTimeStamp OPTIONAL */
    ChargeInformationList* chargeInformationList; /* ChargeInformationList OPTIONAL */
} LocationServiceUsage;

AsnLen BEncLocationServiceUsageContent PROTO ((BUF_TYPE b, LocationServiceUsage *v));

void BDecLocationServiceUsageContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LocationServiceUsage *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintLocationServiceUsage PROTO ((FILE* f, LocationServiceUsage *v, unsigned short int indent));
void FreeLocationServiceUsage PROTO ((LocationServiceUsage *v));





typedef struct SupplServiceUsed /* [APPLICATION 206] IMPLICIT SEQUENCE */
{
    SupplServiceCode supplServiceCode; /* SupplServiceCode OPTIONAL */
    SupplServiceActionCode* supplServiceActionCode; /* SupplServiceActionCode OPTIONAL */
    SsParameters ssParameters; /* SsParameters OPTIONAL */
    ChargingTimeStamp* chargingTimeStamp; /* ChargingTimeStamp OPTIONAL */
    struct ChargeInformation* chargeInformation; /* ChargeInformation OPTIONAL */
    BasicServiceCodeList* basicServiceCodeList; /* BasicServiceCodeList OPTIONAL */
} SupplServiceUsed;

AsnLen BEncSupplServiceUsedContent PROTO ((BUF_TYPE b, SupplServiceUsed *v));

void BDecSupplServiceUsedContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SupplServiceUsed *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintSupplServiceUsed PROTO ((FILE* f, SupplServiceUsed *v, unsigned short int indent));
void FreeSupplServiceUsed PROTO ((SupplServiceUsed *v));





typedef struct SupplServiceEvent /* [APPLICATION 11] IMPLICIT SEQUENCE */
{
    struct ChargeableSubscriber* chargeableSubscriber; /* ChargeableSubscriber OPTIONAL */
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber OPTIONAL */
    struct LocationInformation* locationInformation; /* LocationInformation OPTIONAL */
    struct ImeiOrEsn* equipmentIdentifier; /* ImeiOrEsn OPTIONAL */
    struct SupplServiceUsed* supplServiceUsed; /* SupplServiceUsed OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} SupplServiceEvent;

AsnLen BEncSupplServiceEventContent PROTO ((BUF_TYPE b, SupplServiceEvent *v));

void BDecSupplServiceEventContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, SupplServiceEvent *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintSupplServiceEvent PROTO ((FILE* f, SupplServiceEvent *v, unsigned short int indent));
void FreeSupplServiceEvent PROTO ((SupplServiceEvent *v));





typedef struct ServiceCentreUsage /* [APPLICATION 12] IMPLICIT SEQUENCE */
{
    struct ScuBasicInformation* basicInformation; /* ScuBasicInformation OPTIONAL */
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber OPTIONAL */
    ServingNetwork servingNetwork; /* ServingNetwork OPTIONAL */
    RecEntityCode* recEntityCode; /* RecEntityCode OPTIONAL */
    struct ChargeInformation* chargeInformation; /* ChargeInformation OPTIONAL */
    struct ScuChargeType* scuChargeType; /* ScuChargeType OPTIONAL */
    struct ScuTimeStamps* scuTimeStamps; /* ScuTimeStamps OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} ServiceCentreUsage;

AsnLen BEncServiceCentreUsageContent PROTO ((BUF_TYPE b, ServiceCentreUsage *v));

void BDecServiceCentreUsageContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ServiceCentreUsage *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintServiceCentreUsage PROTO ((FILE* f, ServiceCentreUsage *v, unsigned short int indent));
void FreeServiceCentreUsage PROTO ((ServiceCentreUsage *v));





typedef struct GprsCall /* [APPLICATION 14] IMPLICIT SEQUENCE */
{
    struct GprsBasicCallInformation* gprsBasicCallInformation; /* GprsBasicCallInformation OPTIONAL */
    struct GprsLocationInformation* gprsLocationInformation; /* GprsLocationInformation OPTIONAL */
    struct ImeiOrEsn* equipmentIdentifier; /* ImeiOrEsn OPTIONAL */
    struct GprsServiceUsed* gprsServiceUsed; /* GprsServiceUsed OPTIONAL */
    struct CamelServiceUsed* camelServiceUsed; /* CamelServiceUsed OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} GprsCall;

AsnLen BEncGprsCallContent PROTO ((BUF_TYPE b, GprsCall *v));

void BDecGprsCallContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, GprsCall *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintGprsCall PROTO ((FILE* f, GprsCall *v, unsigned short int indent));
void FreeGprsCall PROTO ((GprsCall *v));





typedef struct ContentTransaction /* [APPLICATION 17] IMPLICIT SEQUENCE */
{
    struct ContentTransactionBasicInfo* contentTransactionBasicInfo; /* ContentTransactionBasicInfo OPTIONAL */
    struct ChargedPartyInformation* chargedPartyInformation; /* ChargedPartyInformation OPTIONAL */
    struct ServingPartiesInformation* servingPartiesInformation; /* ServingPartiesInformation OPTIONAL */
    ContentServiceUsedList* contentServiceUsed; /* ContentServiceUsedList OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} ContentTransaction;

AsnLen BEncContentTransactionContent PROTO ((BUF_TYPE b, ContentTransaction *v));

void BDecContentTransactionContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, ContentTransaction *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintContentTransaction PROTO ((FILE* f, ContentTransaction *v, unsigned short int indent));
void FreeContentTransaction PROTO ((ContentTransaction *v));





typedef struct LocationService /* [APPLICATION 297] IMPLICIT SEQUENCE */
{
    RapFileSequenceNumber rapFileSequenceNumber; /* RapFileSequenceNumber OPTIONAL */
    RecEntityCode* recEntityCode; /* RecEntityCode OPTIONAL */
    CallReference callReference; /* CallReference OPTIONAL */
    struct TrackingCustomerInformation* trackingCustomerInformation; /* TrackingCustomerInformation OPTIONAL */
    struct LCSSPInformation* lCSSPInformation; /* LCSSPInformation OPTIONAL */
    struct TrackedCustomerInformation* trackedCustomerInformation; /* TrackedCustomerInformation OPTIONAL */
    struct LocationServiceUsage* locationServiceUsage; /* LocationServiceUsage OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} LocationService;

AsnLen BEncLocationServiceContent PROTO ((BUF_TYPE b, LocationService *v));

void BDecLocationServiceContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, LocationService *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintLocationService PROTO ((FILE* f, LocationService *v, unsigned short int indent));
void FreeLocationService PROTO ((LocationService *v));





typedef struct BasicServiceUsed /* [APPLICATION 39] IMPLICIT SEQUENCE */
{
    struct BasicService* basicService; /* BasicService OPTIONAL */
    ChargingTimeStamp* chargingTimeStamp; /* ChargingTimeStamp OPTIONAL */
    ChargeInformationList* chargeInformationList; /* ChargeInformationList OPTIONAL */
    HSCSDIndicator hSCSDIndicator; /* HSCSDIndicator OPTIONAL */
} BasicServiceUsed;

AsnLen BEncBasicServiceUsedContent PROTO ((BUF_TYPE b, BasicServiceUsed *v));

void BDecBasicServiceUsedContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, BasicServiceUsed *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintBasicServiceUsed PROTO ((FILE* f, BasicServiceUsed *v, unsigned short int indent));
void FreeBasicServiceUsed PROTO ((BasicServiceUsed *v));





typedef AsnList BasicServiceUsedList; /* [APPLICATION 38] IMPLICIT SEQUENCE OF BasicServiceUsed */

AsnLen BEncBasicServiceUsedListContent PROTO ((BUF_TYPE b, BasicServiceUsedList *v));

void BDecBasicServiceUsedListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, BasicServiceUsedList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintBasicServiceUsedList PROTO ((FILE* f, BasicServiceUsedList *v, unsigned short int indent));
void FreeBasicServiceUsedList PROTO ((BasicServiceUsedList *v));





typedef struct MobileOriginatedCall /* [APPLICATION 9] IMPLICIT SEQUENCE */
{
    struct MoBasicCallInformation* basicCallInformation; /* MoBasicCallInformation OPTIONAL */
    struct LocationInformation* locationInformation; /* LocationInformation OPTIONAL */
    struct ImeiOrEsn* equipmentIdentifier; /* ImeiOrEsn OPTIONAL */
    BasicServiceUsedList* basicServiceUsedList; /* BasicServiceUsedList OPTIONAL */
    SupplServiceCode supplServiceCode; /* SupplServiceCode OPTIONAL */
    struct ThirdPartyInformation* thirdPartyInformation; /* ThirdPartyInformation OPTIONAL */
    struct CamelServiceUsed* camelServiceUsed; /* CamelServiceUsed OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} MobileOriginatedCall;

AsnLen BEncMobileOriginatedCallContent PROTO ((BUF_TYPE b, MobileOriginatedCall *v));

void BDecMobileOriginatedCallContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MobileOriginatedCall *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMobileOriginatedCall PROTO ((FILE* f, MobileOriginatedCall *v, unsigned short int indent));
void FreeMobileOriginatedCall PROTO ((MobileOriginatedCall *v));





typedef struct MobileTerminatedCall /* [APPLICATION 10] IMPLICIT SEQUENCE */
{
    struct MtBasicCallInformation* basicCallInformation; /* MtBasicCallInformation OPTIONAL */
    struct LocationInformation* locationInformation; /* LocationInformation OPTIONAL */
    struct ImeiOrEsn* equipmentIdentifier; /* ImeiOrEsn OPTIONAL */
    BasicServiceUsedList* basicServiceUsedList; /* BasicServiceUsedList OPTIONAL */
    struct CamelServiceUsed* camelServiceUsed; /* CamelServiceUsed OPTIONAL */
    OperatorSpecInfoList* operatorSpecInformation; /* OperatorSpecInfoList OPTIONAL */
} MobileTerminatedCall;

AsnLen BEncMobileTerminatedCallContent PROTO ((BUF_TYPE b, MobileTerminatedCall *v));

void BDecMobileTerminatedCallContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, MobileTerminatedCall *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintMobileTerminatedCall PROTO ((FILE* f, MobileTerminatedCall *v, unsigned short int indent));
void FreeMobileTerminatedCall PROTO ((MobileTerminatedCall *v));





typedef struct CallEventDetail /* CHOICE */
{
    enum CallEventDetailChoiceId
    {
        CALLEVENTDETAIL_MOBILEORIGINATEDCALL,
        CALLEVENTDETAIL_MOBILETERMINATEDCALL,
        CALLEVENTDETAIL_SUPPLSERVICEEVENT,
        CALLEVENTDETAIL_SERVICECENTREUSAGE,
        CALLEVENTDETAIL_GPRSCALL,
        CALLEVENTDETAIL_CONTENTTRANSACTION,
        CALLEVENTDETAIL_LOCATIONSERVICE
    } choiceId;
    union CallEventDetailChoiceUnion
    {
    struct MobileOriginatedCall* mobileOriginatedCall; /* MobileOriginatedCall */
    struct MobileTerminatedCall* mobileTerminatedCall; /* MobileTerminatedCall */
    struct SupplServiceEvent* supplServiceEvent; /* SupplServiceEvent */
    struct ServiceCentreUsage* serviceCentreUsage; /* ServiceCentreUsage */
    struct GprsCall* gprsCall; /* GprsCall */
    struct ContentTransaction* contentTransaction; /* ContentTransaction */
    struct LocationService* locationService; /* LocationService */
    } a;
} CallEventDetail;

AsnLen BEncCallEventDetailContent PROTO ((BUF_TYPE b, CallEventDetail *v));

void BDecCallEventDetailContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CallEventDetail *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintCallEventDetail PROTO ((FILE* f, CallEventDetail *v, unsigned short int indent));
void FreeCallEventDetail PROTO ((CallEventDetail *v));





typedef AsnList CallEventDetailList; /* [APPLICATION 3] IMPLICIT SEQUENCE OF CallEventDetail */

AsnLen BEncCallEventDetailListContent PROTO ((BUF_TYPE b, CallEventDetailList *v));

void BDecCallEventDetailListContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, CallEventDetailList *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintCallEventDetailList PROTO ((FILE* f, CallEventDetailList *v, unsigned short int indent));
void FreeCallEventDetailList PROTO ((CallEventDetailList *v));





typedef struct TransferBatch /* [APPLICATION 1] IMPLICIT SEQUENCE */
{
    struct BatchControlInfo* batchControlInfo; /* BatchControlInfo OPTIONAL */
    struct AccountingInfo* accountingInfo; /* AccountingInfo OPTIONAL */
    struct NetworkInfo* networkInfo; /* NetworkInfo OPTIONAL */
    MessageDescriptionInfoList* messageDescriptionInfo; /* MessageDescriptionInfoList OPTIONAL */
    CallEventDetailList* callEventDetails; /* CallEventDetailList OPTIONAL */
    struct AuditControlInfo* auditControlInfo; /* AuditControlInfo OPTIONAL */
} TransferBatch;

AsnLen BEncTransferBatchContent PROTO ((BUF_TYPE b, TransferBatch *v));

void BDecTransferBatchContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, TransferBatch *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintTransferBatch PROTO ((FILE* f, TransferBatch *v, unsigned short int indent));
void FreeTransferBatch PROTO ((TransferBatch *v));





typedef struct DataInterChange /* CHOICE */
{
    enum DataInterChangeChoiceId
    {
        DATAINTERCHANGE_TRANSFERBATCH,
        DATAINTERCHANGE_NOTIFICATION
    } choiceId;
    union DataInterChangeChoiceUnion
    {
    struct TransferBatch* transferBatch; /* TransferBatch */
    struct Notification* notification; /* Notification */
    } a;
} DataInterChange;

AsnLen BEncDataInterChangeContent PROTO ((BUF_TYPE b, DataInterChange *v));

void BDecDataInterChangeContent PROTO ((BUF_TYPE b, AsnTag tagId0, AsnLen elmtLen0, DataInterChange *v, AsnLen *bytesDecoded, ENV_TYPE env));


void PrintDataInterChange PROTO ((FILE* f, DataInterChange *v, unsigned short int indent));
void FreeDataInterChange PROTO ((DataInterChange *v));






#endif /* conditional include of tap311.h */
